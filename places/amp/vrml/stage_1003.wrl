#VRML V2.0 utf8

PROTO SharedEvent [
field SFBool local TRUE
exposedField SFString   name    "event"  
exposedField SFString   type    "SFTime" 
eventIn SFBool  boolFromServer    eventIn SFColor colorFromServer
eventIn SFFloat floatFromServer   eventIn SFInt32 int32FromServer
eventIn SFRotation rotationFromServer 
eventIn SFString stringFromServer eventIn SFTime timeFromServer
eventIn SFVec2f vec2fFromServer   eventIn SFVec3f vec3fFromServer  
eventOut SFBool boolToServer      eventOut SFColor colorToServer  
eventOut SFFloat floatToServer    eventOut SFInt32 int32ToServer  
eventOut SFRotation rotationToServer  
eventOut SFString stringToServer  eventOut SFTime timeToServer  
eventOut SFVec2f vec2fToServer    eventOut SFVec3f vec3fToServer  
eventIn SFBool  set_bool    eventIn SFColor set_color  
eventIn SFFloat set_float   eventIn SFInt32 set_int32  
eventIn SFRotation set_rotation  
eventIn SFString set_string eventIn SFTime set_time  
eventIn SFVec2f set_vec2f   eventIn SFVec3f set_vec3f  
eventOut SFBool bool_changed     eventOut SFColor color_changed  
eventOut SFFloat float_changed   eventOut SFInt32 int32_changed  
eventOut SFRotation rotation_changed  
eventOut SFString string_changed eventOut SFTime  time_changed  
eventOut SFVec2f vec2f_changed   eventOut SFVec3f vec3f_changed  
]{ 
Script {
field SFBool local IS local 
#eventIn SFString set_name IS set_name  eventIn SFString set_type IS set_type eventOut SFString name_changed IS name_changed                                       eventOut SFString  type_changed IS type_changed
eventIn SFBool    boolFromServer      IS boolFromServer 
eventIn SFColor   colorFromServer     IS colorFromServer 
eventIn SFFloat   floatFromServer     IS floatFromServer 
eventIn SFInt32   int32FromServer     IS int32FromServer 
eventIn SFRotation rotationFromServer IS rotationFromServer 
eventIn SFString  stringFromServer    IS stringFromServer 
eventIn SFTime    timeFromServer      IS timeFromServer 
eventIn SFVec2f   vec2fFromServer     IS vec2fFromServer 
eventIn SFVec3f   vec3fFromServer     IS vec3fFromServer 
eventOut SFBool    boolToServer      IS boolToServer 
eventOut SFColor   colorToServer     IS colorToServer 
eventOut SFFloat   floatToServer     IS floatToServer 
eventOut SFInt32   int32ToServer     IS int32ToServer 
eventOut SFRotation rotationToServer IS rotationToServer 
eventOut SFString  stringToServer    IS stringToServer 
eventOut SFTime    timeToServer      IS timeToServer 
eventOut SFVec2f   vec2fToServer     IS vec2fToServer 
eventOut SFVec3f   vec3fToServer     IS vec3fToServer
eventIn SFBool    set_bool    IS set_bool 
eventIn SFColor   set_color   IS set_color 
eventIn SFFloat   set_float   IS set_float 
eventIn SFInt32   set_int32   IS set_int32 
eventIn SFRotation set_rotation IS set_rotation 
eventIn SFString  set_string  IS set_string 
eventIn SFTime    set_time    IS set_time 
eventIn SFVec2f   set_vec2f   IS set_vec2f 
eventIn SFVec3f   set_vec3f   IS set_vec3f
eventOut SFBool    bool_changed      IS bool_changed 
eventOut SFColor   color_changed     IS color_changed 
eventOut SFFloat   float_changed     IS float_changed 
eventOut SFInt32   int32_changed     IS int32_changed 
eventOut SFRotation rotation_changed IS rotation_changed 
eventOut SFString  string_changed    IS string_changed 
eventOut SFTime    time_changed      IS time_changed 
eventOut SFVec2f   vec2f_changed     IS vec2f_changed 
eventOut SFVec3f   vec3f_changed     IS vec3f_changed 
url "vrmlscript: 
function set_name(value, time) { name_changed = value; } 
function set_type(value, time) { type_changed = value; } 
function boolFromServer (value, time) { bool_changed = value; } 
function colorFromServer (value, time) { color_changed = value; } 
function floatFromServer (value, time) { float_changed = value; } 
function int32FromServer (value, time) { int32_changed = value; } 
function rotationFromServer (value, time) {rotation_changed = value; } 
function stringFromServer (value, time) { string_changed = value; } 
function timeFromServer (value, time) { time_changed = time; } 
function vec2fFromServer (value, time) { vec2f_changed = value; } 
function vec3fFromServer (value, time) { vec3f_changed = value; } 
function set_bool (value, time) {boolToServer = value;if(local){boolFromServer(value,time);}} 
function set_color (value, time) { colorToServer = value;if(local){colorFromServer(value,time);}} 
function set_float (value, time) {floatToServer = value; if(local){floatFromServer(value,time);}} 
function set_int32 (value, time) {int32ToServer = value; if(local){int32FromServer(value,time);}} 
function set_rotation (value, time) {rotationToServer = value;if(local){rotationFromServer(value,time);}} 
function set_string (value, time) {stringToServer = value;if(local){stringFromServer(value,time);}} 
function set_time (value, time) {timeToServer = value;if(local){timeFromServer(value,time);}} 
function set_vec2f (value, time) {vec2fToServer = value;if(local){vec2fFromServer(value,time);}} 
function set_vec3f (value, time) {vec3fToServer = value;if(local){vec3fFromServer(value,time);}} 
"}
}

PROTO BlaxxunZone [ 
eventIn         MFNode   addEvents 
eventIn         MFNode   removeEvents 
eventIn         MFNode   addAvatars 
eventIn         MFNode   removeAvatars 
exposedField    MFNode   events []
exposedField    MFNode   avatars []
eventOut        MFNode   events_added 
eventOut        MFNode   events_removed 
eventOut        MFNode   avatars_added 
eventOut        MFNode   avatars_removed
eventIn         SFString set_myAvatarURL 
eventOut        SFString myAvatarURL_changed 
eventIn         SFInt32  set_myAvatarGesture 
eventIn         SFInt32  myAvatarGestureFromServer 
exposedField	 SFNode   beamToViewpoint NULL
eventOut        SFInt32  myAvatarGesture_changed 
eventOut        SFInt32  myAvatarGestureToServer 
exposedField    MFNode   avatarLOD []
exposedField    MFFloat  avatarRange []
exposedField    MFString sendToChat ""
exposedField    SFFloat  beamToDistance 3
exposedField    MFString groupChatName ""
exposedField    MFString groupChat ""
exposedField    SFString myAvatarName ""
eventIn         MFNode   addObjects 
eventIn         MFNode   removeObjects 
eventOut        MFNode   objects_added 
eventOut        MFNode   objects_removed
]
{
Group {
}
DEF S Script {
 eventIn MFNode addEvents IS addEvents
 eventIn MFNode removeEvents IS removeEvents
 eventIn MFNode addAvatars IS addAvatars
 eventIn MFNode removeAvatars IS removeAvatars 
 eventIn MFNode addObjects IS addObjects
 eventIn MFNode removeObjects IS removeObjects 
 eventIn SFString set_myAvatarURL IS set_myAvatarURL
 eventOut MFNode events_added IS events_added
 eventOut MFNode events_removed IS events_removed
 eventOut MFNode avatars_added IS avatars_added
 eventOut MFNode avatars_removed IS avatars_removed
 eventOut MFNode objects_added IS objects_added
 eventOut MFNode objects_removed IS objects_removed
 eventIn         SFInt32  set_myAvatarGesture IS set_myAvatarGesture
 eventIn         SFInt32  myAvatarGestureFromServer IS myAvatarGestureFromServer
 eventOut        SFInt32  myAvatarGesture_changed IS myAvatarGesture_changed
 eventOut        SFInt32  myAvatarGestureToServer IS myAvatarGestureToServer
 eventOut		 SFString myAvatarURL_changed IS myAvatarURL_changed
 exposedField    MFString sendToChat IS sendToChat
 exposedField    SFFloat  beamToDistance  IS beamToDistance  
 exposedField    MFString groupChatName  IS groupChatName  
 exposedField    MFString groupChat  IS groupChat  
url "vrmlscript:
 function addEvents(value, time) { events_added = value; }
 function addAvatars(value, time) { avatars_added = value; }
 function addObjects(value, time) { objects_added = value; }
 function removeEvents(value, time) { events_removed = value; }
 function removeAvatars(value, time) { avatars_removed = value; }
 function removeObjects(value, time) { objects_removed = value; }
 function set_myAvatarGesture(value, time) { myAvatarGestureToServer = value; }
 function myAvatarGestureFromServer(value, time) { myAvatarGesture_changed = value; }
 function set_myAvatarURL(value, time) { myAvatarURL_changed = value; }
"
}
}# END BlaxxunZone


PROTO Zoomer[
eventIn SFTime bind_zoom
]{
DEF nav NavigationInfo{type "PAN" headlight FALSE}
DEF zoom Viewpoint{}
HUD{
children DEF zoom_switch Switch{
whichChoice -1
choice DEF main Transform{
translation 0 0 -.5
children DEF aspect Transform{translation 0 0 0 
children[

Transform{
translation .27 .15 0 rotation 0 1 0 0 scale 1 1 .25 
children[
DEF disable_zoom TouchSensor{}
Shape{
appearance Appearance{material	Material {ambientIntensity	0.454545 diffuseColor	0.44 0.1 0 specularColor	1 0.68 0.51	emissiveColor	0.15 0.13 0.06 shininess	0.07}}
geometry Sphere{radius .015}
}
]}

Transform {
children	Shape {
appearance	DEF mask Appearance {texture	ImageTexture {url	"mask.gif"}}
geometry	IndexedFaceSet {ccw FALSE
coord	Coordinate {point	[ -0.1 -0.0588235 0,-0.1 0.0588235 0,0.1 0.0588235 0,0.1 -0.0588235 0 ]}
coordIndex	[ 0, 1, 2, 3, -1 ]
texCoord	TextureCoordinate {point	[ 0.00250542 0.00115666,0.00136438 0.995574,0.996339 0.995574,0.99748 0.00115666 ]}
texCoordIndex	[ 0, 1, 2, 3, -1 ]
}}
translation	0 0 0
scale	3.5 3.5 3.5
}

Transform {
children	Shape {
appearance USE mask
geometry IndexedFaceSet {
coord	Coordinate {point	[ -0.1 -0.0588235 0,-0.1 0.0588235 0,-0.141667 0.1 0,-0.141667 -0.1 0,0.1 -0.0588235 0,0.141667 -0.1 0,0.1 0.0588235 0,0.141667 0.1 0 ]}
coordIndex	[ 0, 1, 2, 3, -1, 4, 0, 3,5, -1, 1, 6, 7, 2, -1, 6,4, 5, 7, -1 ]
texCoord	TextureCoordinate {point	[ -0.00251174 0.0493622,-0.00251174 0.947457,-0.0584843 1.02563,-0.0584843 -0.0269805,0.999094 0.0493622,1.05754 -0.0269805,0.999094 0.947457,1.05754 1.02563 ]}
texCoordIndex	[ 0, 1, 2, 3, -1, 4, 0, 3,5, -1, 1, 6, 7, 2, -1, 6,4, 5, 7, -1 ]}
}
scale 3.5 3.5 3.5
}

Transform{
translation .32 0 -.02 rotation -.61 0 1 1.571
children[
DEF zoom_in CylinderSensor{ autoOffset TRUE}# minAngle 0 maxAngle 6
DEF dial Transform{
translation 0 0 0 rotation 0 1 0 0
children[
Shape{
appearance Appearance{material Material{}
texture ImageTexture{url"dial.jpg"}
textureTransform TextureTransform{scale 1.1 20 translation 0 -0.05 rotation 1.571}
}
geometry Cylinder{radius .1 height .01 top FALSE bottom FALSE}
}
]}]}]}}}}

DEF zoom_script Script{
eventIn   SFTime      bind_zoom        IS bind_zoom
eventIn   SFTime      unbind_zoom
eventIn   SFRotation  set_zoom
eventIn   SFBool      enable_zoom
field     SFNode      self             USE zoom_script
field     SFNode      view             USE zoom
field     SFNode      nav              USE nav
field     SFNode      zoom_in          USE zoom_in
field     SFFloat     lastZoom         1
eventOut  SFFloat     fov_changed
eventOut  SFVec3f     scale_changed
eventOut  SFInt32     choice_changed
eventOut  SFBool      bind_changed
########HUD HANDLING
eventIn  SFFloat      set_windowAspect
eventOut SFVec3f      offset_changed
directOutput TRUE
url"vrmlscript:
function set_windowAspect(v,t){
// print(v);
 if(v < 1.62){
   x = (1.62/v) * -.2;
   offset_changed = new SFVec3f(0,0,x);
   return;
 }
 if(v > 2.45){
   x = (2.45/v) * .1;
   offset_changed = new SFVec3f(0,0,x);
   return;
 }
 offset_changed = new SFVec3f(0,0,0);
}
function enable_zoom(v,t){
 if(!v){zoom_in.enabled = true;}
}
function bind_zoom(v,t){
 Browser.setGravity(false);
 view.position = Browser.viewpointPosition;
 view.orientation = Browser.viewpointOrientation;
 view.set_bind = true;
 nav.set_bind = true;
 choice_changed = 0;
}
function unbind_zoom(v,t){
 Browser.setGravity(true);
 view.set_bind = false;
 nav.set_bind = false;
 choice_changed = -1;
}
function set_zoom(v,t){
 rot = 1 - (v[3]/6);
 if(v[3] < 0){  
   if(v[3] <= lastZoom){zoom_in.enabled = false;}
 }
 if(v[3] >= 5.8){
   if(v[3] >= lastZoom){zoom_in.enabled = false;}
 }
 lastZoom = v[3];
 if(zoom_in.enabled){
  fov_changed = rot * .785;
  rot -=  (.05 * rot) * (v[3]/6);
  scale_changed = new SFVec3f(rot,rot,1);
 }
 Browser.boundViewpoint.orientation = Browser.viewpointOrientation;
}
function initialize(){
 set_windowAspect( Browser.getWindowAspect() );
 Browser.addRoute( Browser, 'windowAspect', self, 'set_windowAspect' );
}
"}
ROUTE zoom_in.rotation_changed     TO zoom_script.set_zoom
ROUTE zoom_in.rotation_changed     TO dial.set_rotation
ROUTE zoom_in.isActive             TO zoom_script.enable_zoom
ROUTE disable_zoom.touchTime       TO zoom_script.unbind_zoom
ROUTE zoom_script.fov_changed      TO zoom.set_fieldOfView
ROUTE zoom_script.scale_changed    TO main.set_scale
ROUTE zoom_script.choice_changed   TO zoom_switch.set_whichChoice
ROUTE zoom_script.offset_changed   TO aspect.set_translation
}#END PROTO Zoomer

PROTO HSMaterial[
field SFColor diffuseColor .5 0 0 field SFColor specularColor 0 0 0
field SFColor emissiveColor 0 0 0 field SFFloat shininess 0.5
field SFFloat transparency 0 field SFFloat ambientIntensity 0
]{
DEF thisMat Material{diffuseColor IS diffuseColor emissiveColor IS emissiveColor specularColor IS specularColor  shininess IS shininess transparency IS transparency ambientIntensity IS ambientIntensity}
DEF s Script{field SFNode mat USE thisMat url"vrmlscript:function initialize(){if(!Browser.getCap(2)){mat.transparency = 0;}}"}
}#END HSMaterial

PROTO LaserDrawPlane[
exposedField SFVec3f position 0 0 0
exposedField SFColor color 0 1 0
field MFVec3f drawCoord []
field SFVec3f laserPosition 0 0 0
field MFString url "laser.gif"
]{
Collision{collide FALSE children[
Shape{appearance Appearance{material HSMaterial{diffuseColor IS color emissiveColor IS color transparency .7}}geometry DEF laserbeam_geometry IndexedLineSet{ coord DEF laserbeam_coord Coordinate{} coordIndex[]}}
Shape{appearance Appearance{material HSMaterial{diffuseColor IS color emissiveColor IS color transparency .8}}geometry DEF draw_geometry IndexedLineSet{ coord DEF draw_coordinate Coordinate{point IS drawCoord} coordIndex[]}}

Shape{appearance Appearance{
material Material{diffuseColor IS color emissiveColor IS color transparency .8}
texture ImageTexture{url IS url}
textureTransform DEF plane_tt TextureTransform{scale .25 1}
}
geometry DEF plane_geometry IndexedFaceSet{ solid FALSE coord DEF plane_coordinate Coordinate{point[0 0 0,0 0 0,0 0 0]} coordIndex[0,1,2,-1] texCoord TextureCoordinate{point[.5 1,0 0,1 0,0 0]} texCoordIndex[0,1,2,-1]}
}

DEF laser_interp PositionInterpolator{key[0,.5,1]keyValue[0 0 0,10 0 0,0 0 0]}
DEF laser_clock TimeSensor{cycleInterval 10 enabled TRUE loop TRUE}
DEF laser_script Script{
eventIn SFFloat set_fraction
field SFTime lastTime 0
eventOut MFVec3f value_changed
field MFVec3f drawCoord IS drawCoord
field MFVec3f theseCoord []
field SFVec3f laserPosition IS laserPosition
field SFNode draw USE draw_geometry
field SFNode laserbeam USE laserbeam_geometry
field SFNode plane USE plane_geometry
field SFNode interp USE laser_interp
field MFVec3f lineVec []

eventIn SFVec3f set_position IS position
field SFVec3f position IS position
eventOut MFVec3f draw_changed
eventOut MFVec3f plane_changed

eventIn SFVec3f set_textureTranslation
eventOut SFVec2f texture_changed

url"vrmlscript:
function set_position(v,t){
   position = v;
   for(i = 0;i < drawCoord.length;i++){theseCoord[i] = v.add(drawCoord[i]);}
   points = new MFVec3f(laserPosition);
   for(i=1;i < drawCoord.length + 1;i++){points[i] = theseCoord[i - 1];}
   plane_changed = points;
   draw_changed = theseCoord;
}
function set_fraction(v,t){if(t < lastTime + .01){return;}else{lastTime = t;point = new MFVec3f(laserPosition);for(i=1;i < drawCoord.length;i++){lineVec[i] = theseCoord[i].subtract(theseCoord[i-1]);point[i] = theseCoord[i-1].add(lineVec[i].multiply(Math.random()));}value_changed = point;}}
function set_textureTranslation(v,t){texture_changed = new SFVec2f(v[0],v[2]);}
function initialize(){
 for(i = 0;i < drawCoord.length;i++){theseCoord[i] = position.add(drawCoord[i]);}
 for(i = 0;i < drawCoord.length;i++){draw.coordIndex[i] = i;}
 draw.coordIndex[drawCoord.length] = -1;
 
 plane.coord.point[0] = laserPosition;
 for(i=1;i < drawCoord.length + 1;i++){
  plane.coord.point[i] = drawCoord[i - 1];  
    if(i < drawCoord.length){
     j = (i - 1)*4;
     plane.coordIndex[j] = 0;
     plane.coordIndex[j + 1] = i;
     plane.coordIndex[j + 2] = i + 1;
     plane.coordIndex[j + 3] = -1;
     plane.texCoordIndex[j] = 0;
     plane.texCoordIndex[j + 1] = 2;
     plane.texCoordIndex[j + 2] = 3;
     plane.texCoordIndex[j + 3] = -1;    
    }
 }
 laserbeam.coord.point[0] = laserPosition;
 for(i=1;i < drawCoord.length;i++){
   lineVec[i] = theseCoord[i].subtract(theseCoord[i-1]);
   laserbeam.coord.point[i] = theseCoord[i-1].add(lineVec[i].multiply(Math.random()));
   j = (i-1)*3; 
   laserbeam.coordIndex[j] = 0; laserbeam.coordIndex[j + 1] = i; laserbeam.coordIndex[j + 2] = -1;
 }
}

"}]}
ROUTE laser_clock.fraction_changed TO laser_script.set_fraction
ROUTE laser_clock.fraction_changed TO laser_interp.set_fraction
ROUTE laser_interp.value_changed TO laser_script.set_textureTranslation
ROUTE laser_script.texture_changed TO plane_tt.set_translation
ROUTE laser_script.value_changed TO laserbeam_coord.set_point 
ROUTE laser_script.draw_changed TO draw_coordinate.set_point

ROUTE laser_script.plane_changed TO plane_coordinate.set_point 
}#END LaserDraw PROTO

PROTO LaserSpot[
exposedField SFVec3f position 0 0 0
field SFColor color 0 1 0
field MFVec3f drawCoord []
field SFVec3f laserPosition 0 0 0
]{
Collision{collide FALSE children[
Shape{appearance Appearance{material HSMaterial{diffuseColor IS color transparency .7}}geometry DEF laserbeam_geometry IndexedLineSet{ coord DEF laserbeam_coord Coordinate{} coordIndex[]}}
Shape{appearance Appearance{material Material{diffuseColor IS color emissiveColor IS color transparency .8}}geometry DEF draw_geometry IndexedFaceSet{ coord DEF draw_coordinate Coordinate{point IS drawCoord} coordIndex[]}}
DEF laser_interp PositionInterpolator{key[0,.5,1]keyValue[0 0 0,10 0 0,0 0 0]}
DEF laser_clock TimeSensor{cycleInterval 100 enabled TRUE loop TRUE}
DEF laser_script Script{
eventIn SFFloat set_fraction
field SFTime lastTime 0
eventOut MFVec3f value_changed
field MFVec3f drawCoord IS drawCoord
field MFVec3f theseCoord []
field SFVec3f laserPosition IS laserPosition
field SFNode draw USE draw_geometry
field SFNode laserbeam USE laserbeam_geometry
field SFNode interp USE laser_interp
field MFVec3f lineVec []
eventIn SFVec3f set_position IS position
field SFVec3f position IS position
eventOut MFVec3f draw_changed
url"vrmlscript:
function set_position(v,t){position = v;for(i = 0;i < drawCoord.length;i++){theseCoord[i] = v.add(drawCoord[i]);}draw_changed = theseCoord; }
function set_fraction(v,t){if(t < lastTime + .04){return;}else{lastTime = t;point = new MFVec3f(laserPosition);for(i=1;i < drawCoord.length;i++){lineVec[i] = theseCoord[i].subtract(theseCoord[i-1]);point[i] = theseCoord[i-1].add(lineVec[i].multiply(Math.random()));}value_changed = point;}}
function set_textureTranslation(v,t){textureTranslation_changed = new SFVec2f(v[0],v[2]);}
function initialize(){for(i = 0;i < drawCoord.length;i++){theseCoord[i] = position.add(drawCoord[i]);}
for(i = 0;i < drawCoord.length;i++){draw.coordIndex[i] = i;} draw.coordIndex[drawCoord.length] = -1;laserbeam.coord.point[0] = laserPosition;
for(i=1;i < drawCoord.length;i++){lineVec[i] = theseCoord[i].subtract(theseCoord[i-1]);laserbeam.coord.point[i] = theseCoord[i-1].add(lineVec[i].multiply(Math.random()));
j = (i-1)*3;laserbeam.coordIndex[j] = 0;laserbeam.coordIndex[j + 1] = i;laserbeam.coordIndex[j + 2] = -1;}}"}]}
ROUTE laser_clock.fraction_changed TO laser_script.set_fraction
ROUTE laser_clock.fraction_changed TO laser_interp.set_fraction
ROUTE laser_script.value_changed TO laserbeam_coord.set_point 
ROUTE laser_script.draw_changed TO draw_coordinate.set_point 
}#END LaserSpot PROTO

PROTO AudioPlayer[
eventIn SFBool       over_menu
eventIn SFTime       get_menu
eventIn SFString     set_clip
eventIn SFTime       toggle_player 
field MFString       onLoadUrl     ""
field SFTime         onLoadDelay   20
field MFString       loadUrl       ""
field MFString       params        "target=action"
]{
HUD{
children[
DEF audio MovieTexture{url"" loop FALSE} 
DEF hud_offset Transform{ translation -1 .5 -2 scale .5 .5 .5
children[
DEF _0 Transform {
children [
DEF display_2 Transform {
children [

Transform {
children Shape {
appearance DEF chsl_1 Appearance {material Material { ambientIntensity 0 diffuseColor 0 0 0 emissiveColor 0 1 1 shininess .03}}
geometry DEF text Text {fontStyle FontStyle { size .5 family "ARIAL" style "BOLD"}string ""}
}
translation 2.72 -.621 9.31e-010
center 1.08 .125 0
}
Transform {
children Shape {
appearance USE chsl_1
geometry DEF title Text {fontStyle FontStyle { size .75 family "ARIAL" style "BOLD"}string "CHOOSE A TRACK"}
}
translation 1.07 -.125 0
center 1.19 .25 0
}
Transform {
children Shape {
appearance Appearance {material Material { ambientIntensity .253 diffuseColor 0 0 .75 specularColor 0 .84 .88 shininess .06 transparency .5}}
geometry IndexedFaceSet {
coord Coordinate {point [.5 -.75 -.1, .5 .625 -.1, 9.5 .625 -.1, 9.5 -.75 -.1,]}
coordIndex [0 1 2 3 -1,]
solid FALSE
}}
center 5 -.0625 -.1
}
]
translation -4.95 0 0
scale .01 1 1
center 5 -.0625 -.05
}
DEF play_button_4 Transform {translation 0 -2 0 rotation 0 0 -1 3.142
children[
Shape {
appearance DEF chsl_2 Appearance {texture ImageTexture {url "http://www.cybertown.com/externprotos/audioplayer/black.jpg"}}
geometry IndexedFaceSet {
coord Coordinate {point [-1.42e-007 -.128 .269, -.31 -.757 .269, .31 -.757 .269, -5.96e-008 -.0537 -.0211, -.383 -.831 -.0211, .383 -.831 -.0211,]}
coordIndex [0 1 2 -1, 5 3 0 2 -1, 3 4 1 0 -1, 4 5 2 1 -1,]
texCoord TextureCoordinate {point [.121 .163, .0535 .0388, .189 .0388, .122 .213, .00296 .00294, .241 .00294,]}
creaseAngle 3.14
texCoordIndex [0 1 2 -1, 5 3 0 2 -1, 3 4 1 0 -1, 4 5 2 1 -1,]
}}
DEF play_button TouchSensor{enabled FALSE}
]}
DEF stop_button_6 Transform {
children[
Shape {
appearance USE chsl_2
geometry IndexedFaceSet {
coord Coordinate {point [-.313 -.895 .27, -.313 -1.46 .27, .313 -1.46 .27, .313 -.895 .27, -.383 -.831 -.0211, -.383 -1.52 -.0211, .383 -1.52 -.0211, .383 -.831 -.0211,]}
coordIndex [4 5 1 0 -1, 5 6 2 1 -1, 6 7 3 2 -1, 7 4 0 3 -1, 0 1 2 3 -1,]
texCoord TextureCoordinate {point [.834 .159, .834 .0334, .964 .0334, .964 .159, .802 .191, .802 .00148, .996 .00148, .996 .191,]}
creaseAngle 3.14
texCoordIndex [4 5 1 0 -1, 5 6 2 1 -1, 6 7 3 2 -1, 7 4 0 3 -1, 0 1 2 3 -1,]
}}
DEF stop_button TouchSensor{enabled FALSE}
]}
Transform {
children[
Shape {
appearance USE chsl_2
geometry IndexedFaceSet {
coord Coordinate {
point [
.295 .712 .0417, -1.78e-007 .77 .0417, -8.71e-007 .352 .212, .135 .325 .212, -.295 .712 .0417, -.135 .325 .212, 6.67e-007 1 -.156, -.383 .924 -.156, .383 .924 -.156, .545 .545 .0417, .249 .249 .212, .707 .707 -.156, .924 .383 -.156, .712 .295 .0417,
1 4.77e-008 -.156, .77 5.04e-008 .0417, .924 -.383 -.156, .712 -.295 .0417, .352 5.54e-008 .212, .325 -.135 .212, .545 -.545 .0417, .249 -.249 .212, .707 -.707 -.156, .383 -.924 -.156, .295 -.712 .0417, .135 -.325 .212, -6.19e-008 -.77 .0417,
-8.18e-007 -.352 .212, -.295 -.712 .0417, -.135 -.325 .212, -.383 -.924 -.156, -4.48e-010 -1 -.156, -.707 -.707 -.156, -.545 -.545 .0417, -.249 -.249 .212, -.712 -.295 .0417, -.325 -.135 .212, -.77 9.33e-008 .0417, -.352 7.5e-008 .212,
-1 -1.59e-008 -.156, -.924 -.383 -.156, -.924 .383 -.156, -.712 .295 .0417, -.325 .135 .212, -.545 .545 .0417, -.249 .249 .212, -.707 .707 -.156, .325 .135 .212,
]
}
coordIndex [
0 1 2 3 -1, 1 4 5 2 -1, 6 7 4 1 -1, 8 6 1 0 -1, 9 0 3 10 -1, 11 8 0 9 -1, 12 11 9 13 -1, 14 12 13 15 -1, 16 14 15 17 -1, 17 15 18 19 -1, 20 17 19 21 -1, 22 16 17 20 -1, 23 22 20 24 -1, 24 20 21 25 -1, 26 24 25 27 -1, 28 26 27 29 -1, 30 31 26 28 -1, 31
23 24 26 -1, 32 30 28 33 -1, 33 28 29 34 -1, 35 33 34 36 -1, 37 35 36 38 -1, 39 40 35 37 -1, 40 32 33 35 -1, 41 39 37 42 -1, 42 37 38 43 -1, 4 44 45 5 -1, 44 42 43 45 -1, 7 46 44 4 -1, 46 41 42 44 -1, 15 13 47 18 -1, 13 9 10 47 -1, 21 19 18 47 10 3 2
5 45 43 38 36 34 29 27 25 -1,
]
texCoord TextureCoordinate {
point [
.601 .794, .515 .812, .515 .688, .554 .68, .429 .794, .475 .68, .515 .879, .403 .857, .627 .857, .674 .745, .588 .658, .722 .793, .785 .697, .723 .671, .807 .584, .74 .584, .785 .472, .723 .498, .618 .584, .61 .545, .674 .424, .588 .511, .722 .376,
.627 .312, .601 .375, .554 .489, .515 .357, .515 .481, .429 .375, .475 .489, .403 .312, .515 .29, .308 .376, .355 .424, .442 .511, .307 .498, .42 .545, .29 .584, .412 .584, .222 .584, .245 .472, .245 .697, .307 .671, .42 .624, .355 .745, .442 .658,
.308 .793, .61 .624,
]
}
creaseAngle 3.14
texCoordIndex [
0 1 2 3 -1, 1 4 5 2 -1, 6 7 4 1 -1, 8 6 1 0 -1, 9 0 3 10 -1, 11 8 0 9 -1, 12 11 9 13 -1, 14 12 13 15 -1, 16 14 15 17 -1, 17 15 18 19 -1, 20 17 19 21 -1, 22 16 17 20 -1, 23 22 20 24 -1, 24 20 21 25 -1, 26 24 25 27 -1, 28 26 27 29 -1, 30 31 26 28 -1, 31
23 24 26 -1, 32 30 28 33 -1, 33 28 29 34 -1, 35 33 34 36 -1, 37 35 36 38 -1, 39 40 35 37 -1, 40 32 33 35 -1, 41 39 37 42 -1, 42 37 38 43 -1, 4 44 45 5 -1, 44 42 43 45 -1, 7 46 44 4 -1, 46 41 42 44 -1, 15 13 47 18 -1, 13 9 10 47 -1, 21 19 18 47 10 3 2
5 45 43 38 36 34 29 27 25 -1,
]
}
}
DEF open_button TouchSensor{}]}
Transform {
children [
Transform {
children Shape {
appearance USE chsl_2
geometry IndexedFaceSet {
coord Coordinate {point [
-.707 .707 -2.48e-006, -.924 .383 -2.75e-006, -1 -1.59e-008 -2.24e-006, -.924 -.383 -1.02e-006, -.707 -.707 6.85e-007, -.383 -.924 2.59e-006, -1.13 1.15 .00761, -1.47 .628 .00761, -1.59 .0185 .00761, -1.47 -.591 .00761, -1.13 -1.11 .00761,
-.383 -1.52 .00761, -1.13 1.15 -.164, -1.47 .628 -.164, -1.59 .0185 -.164, -1.47 -.591 -.164, -1.13 -1.11 -.164, -.383 -1.52 -.164, -.707 .707 -.156, -.924 .383 -.156, -1 -1.59e-008 -.156, -.924 -.383 -.156, -.707 -.707 -.156, -.383 -.924 -.156,
]}
coordIndex [1 0 6 7 -1, 2 1 7 8 -1, 3 2 8 9 -1, 4 3 9 10 -1, 5 4 10 11 -1, 7 6 12 13 -1, 8 7 13 14 -1, 9 8 14 15 -1, 10 9 15 16 -1, 11 10 16 17 -1, 23 22 4 5 -1, 21 20 2 3 -1, 22 21 3 4 -1, 20 19 1 2 -1, 19 18 0 1 -1, 12 6 0 18 -1,]
texCoord TextureCoordinate {point [.307 .798, .235 .698, .21 .58, .235 .462, .307 .362, .414 .295, .0533 .774, .0131 .586, .0533 .397, .414 .11, .168 .238, .168 .933,]}
creaseAngle 3.14
texCoordIndex [1 0 11 6 -1, 2 1 6 7 -1, 3 2 7 8 -1, 4 3 8 10 -1, 5 4 10 9 -1, 6 11 11 6 -1, 7 6 6 7 -1, 8 7 7 8 -1, 10 8 8 10 -1, 9 10 10 9 -1, 5 4 4 5 -1, 3 2 2 3 -1, 4 3 3 4 -1, 2 1 1 2 -1, 1 0 0 1 -1, 11 11 0 0 -1,]
}}
center -.988 -.189 -.0782
}
DEF right_10 Transform {
children Shape {
appearance USE chsl_2
geometry IndexedFaceSet {
coord Coordinate {point [
.707 -.707 6.94e-006, .383 -.924 5.99e-006, .383 -1.52 .00762, 1.13 -1.11 .00762, .924 -.383 7.21e-006, 1.47 -.591 .00762, 1 4.77e-008 6.65e-006, 1.59 .0185 .00762, .924 .383 5.48e-006, 1.47 .628 .00762, .383 -1.52 -.164, 1.13 -1.11 -.164,
.707 -.707 -.156, .383 -.924 -.156, 1.13 1.15 .00762, 1.47 .628 -.164, 1.13 1.15 -.164, .707 .707 3.78e-006, 1.47 -.591 -.164, 1.59 .0185 -.164, .924 -.383 -.156, 1 4.77e-008 -.156, .924 .383 -.156, .707 .707 -.156,
]}
coordIndex [0 1 2 3 -1, 4 0 3 5 -1, 6 4 5 7 -1, 8 6 7 9 -1, 3 2 10 11 -1, 12 13 1 0 -1, 14 9 15 16 -1, 17 8 9 14 -1, 5 3 11 18 -1, 7 5 18 19 -1, 9 7 19 15 -1, 20 12 0 4 -1, 21 20 4 6 -1, 22 21 6 8 -1, 23 22 8 17 -1, 17 14 16 23 -1,]
texCoord TextureCoordinate {point [.723 .37, .622 .299, .622 .104, .854 .239, .791 .475, .962 .407, .815 .599, 1 .605, .791 .724, .962 .803, .854 .971, .723 .829,]}
creaseAngle 3.14
texCoordIndex [0 1 2 3 -1, 4 0 3 5 -1, 6 4 5 7 -1, 8 6 7 9 -1, 3 2 2 3 -1, 0 1 1 0 -1, 10 9 9 10 -1, 11 8 9 10 -1, 5 3 3 5 -1, 7 5 5 7 -1, 9 7 7 9 -1, 4 0 0 4 -1, 6 4 4 6 -1, 8 6 6 8 -1, 11 8 8 11 -1, 11 10 10 11 -1,]
}}
center .988 -.189 -.0782
}
]}
Group {
children [
DEF UnnamedAnimation0Time_12 TimeSensor {
startTime -1
}
DEF rightTranslationInterp_13 PositionInterpolator {key [0 .2 .4 .6 .8 1]keyValue [0 0 0 1 0 0 2.78 0 0 4.66 0 0 6.59 0 0 8.5 0 0]}
DEF stop_buttonTranslationInterp_14 PositionInterpolator {key [0 .2 .4 .6 .8 1]keyValue [0 0 0 1 0 0 2.78 0 0 4.66 0 0 6.59 0 0 8.5 -.05 0]}
DEF displayTranslationInterp_15 PositionInterpolator {key [0 .2 .4 .6 .8 1]keyValue [-4.95 0 0 -3.96 0 0 -2.97 0 0 -1.98 0 0 -.99 0 0 0 0 0]}
DEF displayScaleInterp_16 PositionInterpolator {key [0 .2 .4 .6 .8 1]keyValue [.01 1 1 .208 1 1 .406 1 1 .604 1 1 .802 1 1 1 1 1]}
DEF play_buttonTranslationInterp_17 PositionInterpolator {key [0 .2 .4]keyValue [0 -1.2 0   .25 -1.2 0   .5 -1.2 0]}
DEF play_buttonRotationInterp_18 OrientationInterpolator {key [0  .4]keyValue [0 0 -1 3.142    0 0 -1 1.57]}
DEF play_buttonCenterInterp_19 PositionInterpolator {key [0 .2 .4]keyValue [-4.92e-007 -.443 .124 -2.46e-007 -.221 .062 0 0 0]}
DEF UnnamedTransformTranslationInterp_20 PositionInterpolator {key [0 .2 .4 .6 .8 1]keyValue [0 0 0 .06 -.06 0 .12 -.12 0 .18 -.18 0 .24 -.24 0 .3 -.3 0]}
DEF UnnamedTransformScaleInterp_21 PositionInterpolator {key [0 .2 .4 .6 .8 1]keyValue [.1 .1 .1 .14 .14 .14 .18 .18 .18 .22 .22 .22 .26 .26 .26 .3 .3 .3]}
]}
]scale .1 .1 .1}
]}#end Main HUD Transform
]}#end HUD
DEF audio_script Script{
eventIn MFNode       receive
eventIn SFTime       set_time
eventIn SFTime       toggle_player IS toggle_player
eventIn SFString     set_clip      IS set_clip
eventIn SFBool       over_menu     IS over_menu
eventIn SFBool       over_open
eventIn SFBool       over_play
eventIn SFBool       over_stop
eventIn SFTime       get_menu      IS get_menu
eventIn SFTime       open
eventIn SFTime       play
eventIn SFTime       stop
eventIn SFFloat      set_fraction
eventIn  SFFloat      set_windowAspect
field    SFVec3f      offset -1 .65 -2
eventOut SFVec3f      offset_changed
field SFNode         self          USE audio_script
field SFNode         audio         USE audio
field MFString       onLoadUrl     IS  onLoadUrl
field SFTime         onLoadDelay   IS  onLoadDelay
field MFString       loadUrl       IS  loadUrl
field MFString       params        IS  params
field SFTime         lastTime      0
field SFBool         isOpen        FALSE
field MFString       audioUrl      ""
field MFString       messages      ["BUFFERING AUDIO","CHANGE MUSIC","PLAY","STOP","OPEN PLAYER","CLOSE PLAYER"]
field SFInt32        messageIndex  -1
eventOut SFInt32     choice_changed
eventOut MFString    text_changed
eventOut MFString    title_changed
eventOut SFBool      enabled_changed
eventOut SFTime      startTime_changed
eventOut SFFloat     fraction_changed
url "vrmlscript:
   function set_windowAspect(v,t){
    offset[0] = -0.7*(1+((v-1.01)));
    offset_changed = offset;
   }
   function set_fraction(v,t){
    if(!isOpen){
     fraction_changed = v;
     enabled_changed = true;
     if(v == 1){isOpen = true;}
    }else{
     fraction_changed = 1 - v;
     enabled_changed = false;
     if(v == 1){isOpen = false;}
    }
   }
//MOUSE OVER HANDLERS
   function over_menu(v,t){
    if(v){text_changed = new MFString(messages[1]); messageIndex = 1;}
    else {text_changed  = new MFString(''); messageIndex = -1;}
   }
   function over_open(v,t){
    if(v){
      if(isOpen){text_changed = new MFString(messages[5]); messageIndex = 5;}
            else{text_changed = new MFString(messages[4]); messageIndex = 4;}
    }
    else {text_changed  = new MFString(''); messageIndex = -1;}
   }
   function over_play(v,t){
    if(v){text_changed = new MFString(messages[2]); messageIndex = 2;}
    else {text_changed  = new MFString(''); messageIndex = -1;}
   }
   function over_stop(v,t){
    if(v){text_changed = new MFString(messages[3]); messageIndex = 3;}
    else {text_changed  = new MFString(''); messageIndex = -1;}
   }

//AUDIO CONTROLS
   function get_menu(){
    //Browser.loadURL(loadUrl,params);
    //set_clip( new SFString('pnm://video1.video.t-online.de/iworld/real/faceit56.rm|Face It'),Browser.getTime());
   }
   function open(){
    startTime_changed = Browser.getTime();
   }
   function play(t){
    audio.startTime = t;
   }
   function stop(t){
    audio.stopTime = t;
   }
//MISC
   function set_clip(v,t){
    stop(t);
    if(end < 1){end = v.length;}
    if(end > 22){end = 22;}
    clip  = v.substring(0,v.indexOf('|'));
    title = v.substring((v.indexOf('|') + 1),v.length);
    end = title.indexOf('-');
    if(end < 1){end = title.length;}
    title = title.substring(0,end);

    title_changed = new MFString(title);
    audio.url = audioUrl = new MFString(clip);

    play(t);
   }

   function set_time(v,t){
    if(v == 0 || v == lastTime){
      if(messageIndex == -1){text_changed = new MFString(messages[0]); messageIndex = 0;}
    }
    else{
      if(messageIndex < 1){
        seconds = Math.floor(v);
        minutes = Math.floor(seconds/60);
        seconds = seconds - (minutes * 60);
        if(seconds < 10){sec = '0' + seconds;}else{sec = seconds;}
        str = 'PLAYING   ' + minutes + ':' + sec;
        text_changed = new MFString(str); messageIndex = -1;
      }
    }
    lastTime = v;
   }

   function receive(v,t){
    clip  = v[0].data.substring(0,v[0].data.indexOf('^'));
    title = v[0].data.substring((v[0].data.indexOf('^') + 1),v[0].data.length);
    end = title.indexOf('-');
    if(end < 1){end = title.length;}
    if(end > 22){end = 22;}
    title = title.substring(0,end);
    title_changed = new MFString(title);
    audio.url = audioUrl = new MFString(clip);
    play(Browser.getTime() + onLoadDelay);
   }

   function initialize(){
    audio.stopTime = Browser.getWorldStartTime();
    if(onLoadUrl != ''){Browser.createVrmlFromURL(onLoadUrl,self,'receive');}
    else{
     clip  = 'http://www.orgymusic.com/cybertown/10032000.ram';
     title = 'Vapor Transmissions';
     title_changed = new MFString(title);
     audio.url = audioUrl = new MFString(clip);
     play(Browser.getTime() + onLoadDelay);
    }
    set_windowAspect( Browser.getWindowAspect() );
    Browser.addRoute( Browser, 'windowAspect', self, 'set_windowAspect' );
   }
"}
ROUTE audio_script.offset_changed   TO hud_offset.set_translation
ROUTE audio.mediaTime               TO audio_script.set_time
#ROUTE audio_script.choice_changed  TO HUD_switch.set_whichChoice
ROUTE audio_script.text_changed     TO text.set_string
ROUTE audio_script.title_changed    TO title.set_string
ROUTE audio_script.enabled_changed  TO play_button.set_enabled
ROUTE audio_script.enabled_changed  TO stop_button.set_enabled
ROUTE open_button.isOver            TO audio_script.over_open
ROUTE play_button.isOver            TO audio_script.over_play
ROUTE stop_button.isOver            TO audio_script.over_stop
ROUTE open_button.touchTime         TO audio_script.open
ROUTE play_button.touchTime         TO audio_script.play
ROUTE stop_button.touchTime         TO audio_script.stop
ROUTE audio_script.startTime_changed             TO UnnamedAnimation0Time_12.set_startTime
ROUTE UnnamedAnimation0Time_12.fraction_changed  TO audio_script.set_fraction
ROUTE audio_script.fraction_changed TO rightTranslationInterp_13.set_fraction
ROUTE audio_script.fraction_changed TO stop_buttonTranslationInterp_14.set_fraction
ROUTE audio_script.fraction_changed TO displayTranslationInterp_15.set_fraction
ROUTE audio_script.fraction_changed TO displayScaleInterp_16.set_fraction
ROUTE audio_script.fraction_changed TO play_buttonTranslationInterp_17.set_fraction
ROUTE audio_script.fraction_changed TO play_buttonRotationInterp_18.set_fraction
ROUTE audio_script.fraction_changed TO play_buttonCenterInterp_19.set_fraction
ROUTE audio_script.fraction_changed TO UnnamedTransformTranslationInterp_20.set_fraction
ROUTE audio_script.fraction_changed TO UnnamedTransformScaleInterp_21.set_fraction
ROUTE UnnamedTransformTranslationInterp_20.value_changed TO _0.set_translation
ROUTE UnnamedTransformScaleInterp_21.value_changed TO _0.set_scale
ROUTE displayTranslationInterp_15.value_changed TO display_2.set_translation
ROUTE displayScaleInterp_16.value_changed TO display_2.set_scale
ROUTE play_buttonTranslationInterp_17.value_changed TO play_button_4.set_translation
ROUTE play_buttonRotationInterp_18.value_changed TO play_button_4.set_rotation
ROUTE play_buttonCenterInterp_19.value_changed TO play_button_4.set_center
ROUTE stop_buttonTranslationInterp_14.value_changed TO stop_button_6.set_translation
ROUTE rightTranslationInterp_13.value_changed TO right_10.set_translation
}#END PROTO


####################################################################################
#Building
####################################################################################
Transform{translation 0 0 80
children[
Shape{
 appearance Appearance{material Material{diffuseColor 1 0 0}}
 geometry Sphere{radius 5}
}
]}

Transform {
children [
Shape {
appearance Appearance {
#material Material {}
texture ImageTexture {
url "stagetop.jpg"
}
}
geometry IndexedFaceSet {
coord DEF building-COORD Coordinate {
point [
0 0 0, 20 0 0, 14.14 0 14.14, 0 0 20, -14.14 0 14.14, -20 0 0, -14.14 0 -14.14, 0 0 -20, 14.14 0 -14.14, 20 -3.092 0, 14.14 -3.092 14.14, 0 -3.092 20, -14.14 -3.092 14.14, -20 -3.092 0, -14.14 -3.092 -14.14, 14.14 -3.092 -14.14, 26 -8.233 0,
18.38 -8.233 18.38, 0 -8.233 26, -18.38 -8.233 18.38, -26 -8.233 0, -18.38 -8.233 -18.38, 18.38 -8.233 -18.38, 31.2 -50 0, 22.06 -50 22.06, 0 -50 31.2, -22.06 -50 22.06, -31.2 -50 0, 22 -3.092 0, 15.56 -3.092 15.56, 0 -3.092 22, -15.56 -3.092 15.56,
-22 -3.092 0, -15.56 -3.092 -15.56, 15.56 -3.092 -15.56, 19.8 -8.233 0, 14 -8.233 14, 0 -8.233 19.8, -14 -8.233 14, -19.8 -8.233 0, -14 -8.233 -14, 14 -8.233 -14,
]
}
coordIndex [
0 2 1 -1, 0 3 2 -1, 0 4 3 -1, 0 5 4 -1, 0 6 5 -1, 0 7 6 -1, 0 8 7 -1, 0 1 8 -1,
]
texCoord DEF building-TEXCOORD TextureCoordinate {
point [
.5 .5, 1 .707, 1 .293, .707 0, .293 0, 0 .293, 0 .707, .293 1, .707 1, 4 0, 0 1, 4 1, 0 0, 12 0, 10 1, 12 1, 10 0, 8 1, 8 0, 6 1, 6 0, 1 1, 1 0, .046 .321, .305 .052, .352 .159, .154 .364, .052 .695, .159 .648, .321 .954, .364 .846, .695 .948,
.648 .841, .954 .679, .846 .636, .679 .046, .636 .154,
]
}
creaseAngle 1
texCoordIndex [
0 2 1 -1, 0 3 2 -1, 0 4 3 -1, 0 5 4 -1, 0 6 5 -1, 0 7 6 -1, 0 8 7 -1, 0 1 8 -1,
]
}
}
Shape {
appearance Appearance {
#material Material {}
texture ImageTexture {
url "bldgtop.jpg"
}
}
geometry IndexedFaceSet {
coord USE building-COORD
coordIndex [
17 16 35 -1, 35 36 17 -1, 18 17 36 -1, 36 37 18 -1, 19 18 37 -1, 37 38 19 -1, 20 19 38 -1, 38 39 20 -1, 21 20 39 -1, 39 40 21 -1, 16 22 41 -1, 41 35 16 -1,
]
texCoord USE building-TEXCOORD
creaseAngle 1
texCoordIndex [
23 24 25 -1, 25 26 23 -1, 27 23 26 -1, 26 28 27 -1, 29 27 28 -1, 28 30 29 -1, 31 29 30 -1, 30 32 31 -1, 33 31 32 -1, 32 34 33 -1, 24 35 36 -1, 36 25 24 -1,
]
}
}
Shape {
appearance Appearance {
#material Material {}
texture ImageTexture {
url "platformledge.jpg"
}
}
geometry IndexedFaceSet {
coord USE building-COORD
coordIndex [
9 10 29 -1, 29 28 9 -1, 10 11 30 -1, 30 29 10 -1, 11 12 31 -1, 31 30 11 -1, 12 13 32 -1, 32 31 12 -1, 13 14 33 -1, 33 32 13 -1, 15 9 28 -1, 28 34 15 -1,
]
texCoord USE building-TEXCOORD
creaseAngle 1
texCoordIndex [
12 9 11 -1, 11 10 12 -1, 12 9 11 -1, 11 10 12 -1, 12 9 11 -1, 11 10 12 -1, 12 9 11 -1, 11 10 12 -1, 12 9 11 -1, 11 10 12 -1, 12 9 11 -1, 11 10 12 -1,
]
}
}
Shape {
appearance Appearance {
#material Material {}
texture ImageTexture {
url "setsides.jpg"
}
}
geometry IndexedFaceSet {
coord USE building-COORD
coordIndex [
28 36 35 -1, 28 29 36 -1, 29 37 36 -1, 29 30 37 -1, 30 38 37 -1, 30 31 38 -1, 31 39 38 -1, 31 32 39 -1,
]
texCoord USE building-TEXCOORD
creaseAngle 1
texCoordIndex [
13 14 15 -1, 13 16 14 -1, 16 17 14 -1, 16 18 17 -1, 18 19 17 -1, 18 20 19 -1, 20 11 19 -1, 20 9 11 -1,
]
}
}
Shape {
appearance Appearance {
#material Material {}
texture ImageTexture {
url "platformside.jpg"
}
}
geometry IndexedFaceSet {
coord USE building-COORD
coordIndex [
1 10 9 -1, 1 2 10 -1, 2 11 10 -1, 2 3 11 -1, 3 12 11 -1, 3 4 12 -1, 4 13 12 -1, 4 5 13 -1,
]
texCoord USE building-TEXCOORD
creaseAngle 1
texCoordIndex [
12 11 10 -1, 12 9 11 -1, 12 11 10 -1, 12 9 11 -1, 12 11 10 -1, 12 9 11 -1, 12 11 10 -1, 12 9 11 -1,
]
}
}
Shape {
appearance Appearance {
#material Material {}
texture ImageTexture {
url "bldgtall.jpg"
}
}
geometry IndexedFaceSet {
coord USE building-COORD
coordIndex [
16 24 23 -1, 16 17 24 -1, 17 25 24 -1, 17 18 25 -1, 18 26 25 -1, 18 19 26 -1, 19 27 26 -1, 19 20 27 -1,
]
texCoord USE building-TEXCOORD
creaseAngle 1
texCoordIndex [
10 22 12 -1, 10 21 22 -1, 10 22 12 -1, 10 21 22 -1, 10 22 12 -1, 10 21 22 -1, 10 22 12 -1, 10 21 22 -1,
]
}
}
]
scale 1.2 1 1
}



################################################################################
# Lasers
################################################################################
Group{
children[
DEF laser_a LaserDrawPlane{
 color .5 .25 1
 drawCoord[10 0 0,0 3 0,-10 0 0]
 laserPosition -10 30 5
}
DEF laser_b LaserDrawPlane{
 color .5 .25 1
 drawCoord[10 0 0,0 3 0,-10 0 0]
 laserPosition -10 30 -5
}
DEF laser_c LaserDrawPlane{
 color .5 .25 1
 drawCoord[10 0 0,0 3 0,-10 0 0]
 laserPosition 10 30 5
}
DEF laser_d LaserDrawPlane{
 color .5 .25 1
 drawCoord[10 0 0,0 3 0,-10 0 0]
 laserPosition 10 30 -5
}

#######################################################
# Backdrop configuration
#######################################################
DEF backdrop_clock TimeSensor{cycleInterval 10 loop TRUE enabled FALSE}
DEF laser_backdrop_interp_a PositionInterpolator{key[0,.2,.3,.5,.7,.8,1] keyValue[  0  0  125,-60 10  75, 60 10  75, 60  0  75,-60  0  75,  0 10  125,  0  0  125,]}
DEF laser_backdrop_interp_c PositionInterpolator{key[0,.2,.3,.5,.7,.8,1] keyValue[  0  0  125, 60 10  75,-60 10  75,-60  0  75, 60  0  75,  0 10  125,  0  0  125,]}
DEF laser_backdrop_interp_b PositionInterpolator{key[0,.5,1] keyValue[-20 0 -10,20 0 -10,-20 0 -10]}
DEF laser_backdrop_interp_d PositionInterpolator{key[0,.5,1] keyValue[20 0 -10,-20 0 -10,20 0 -10]}

#######################################################
# off
#######################################################
DEF laseroff_clock TimeSensor{loop TRUE enabled FALSE}
DEF laseroff PositionInterpolator{key[0,1] keyValue[0 1000 0,0 1000 0]}

#######################################################
# Spin
#######################################################
DEF spin_clock TimeSensor{cycleInterval 7 loop TRUE enabled FALSE}
DEF spin_script Script{
eventIn   SFFloat set_fraction
eventOut  SFVec3f value_a_changed
eventOut  SFVec3f value_b_changed
eventOut  SFVec3f value_c_changed
eventOut  SFVec3f value_d_changed
url"vrmlscript:
function set_fraction(v,t){
 rot = new SFRotation(0,1,0,(v * 6.284));
 value_a_changed = rot.multVec(new SFVec3f(95,5,95));
 value_b_changed = rot.multVec(new SFVec3f(-95,5,95));
 value_c_changed = rot.multVec(new SFVec3f(95,5,-95));
 value_d_changed = rot.multVec(new SFVec3f(-95,5,-95));
}
"}

#######################################################
# Swoop
#######################################################
DEF spinswoop_clock TimeSensor{cycleInterval 7 loop TRUE enabled FALSE}
DEF spinswoop_script Script{
eventIn   SFFloat set_fraction
eventOut  SFVec3f value_a_changed
eventOut  SFVec3f value_b_changed
eventOut  SFVec3f value_c_changed
eventOut  SFVec3f value_d_changed
url"vrmlscript:
function set_fraction(v,t){
 if(v <= .5){ r = ((v*2) * 3.142)- 2;}
 else{ r = (((1 - v) * 2) * 3.142)- 2;}
 swoop = new SFRotation(1,0,0,r);
 spin = new SFRotation(0,1,0,(v * 6.284));
 t = new SFVec3f(0,0,0);
 rot = new SFRotation();
 x = new VrmlMatrix(); x.setTransform(t,spin);
 y = new VrmlMatrix(); y.setTransform(t,swoop);
 x.multLeft(y).getTransform(t,rot);
 value_a_changed = (new SFRotation(0,1,0,-.7855 )).multVec(  rot.multVec(  new SFVec3f(0,-95,0)  )  );
 value_b_changed = (new SFRotation(0,1,0,-2.3565)).multVec(  rot.multVec(  new SFVec3f(0,-95,0)  )  );
 value_c_changed = (new SFRotation(0,1,0, .7855 )).multVec(  rot.multVec(  new SFVec3f(0,-95,0)  )  );
 value_d_changed = (new SFRotation(0,1,0, 2.3565)).multVec(  rot.multVec(  new SFVec3f(0,-95,0)  )  );
}

"}
]}

################################################################################
# Spots
################################################################################

Group{
children[
DEF spot_a LaserDrawPlane{
 color 1 .5 0
 drawCoord[8 0 -4,4 0 -8,-4 0 -8,-8 0 -4,-8 0 4,-4 0 8,4 0 8,8 0 4]
 laserPosition 46 30 25
}
DEF spot_b LaserDrawPlane{
 color 1 .5 0
 drawCoord[8 0 -4,4 0 -8,-4 0 -8,-8 0 -4,-8 0 4,-4 0 8,4 0 8,8 0 4]
 laserPosition  -42 30 25
}
DEF spot_c LaserDrawPlane{
 color 1 .5 0
 drawCoord[8 0 -4,4 0 -8,-4 0 -8,-8 0 -4,-8 0 4,-4 0 8,4 0 8,8 0 4]
 laserPosition 46 30 -25
}
DEF spot_d LaserDrawPlane{
 color 1 .5 0
 drawCoord[8 0 -4,4 0 -8,-4 0 -8,-8 0 -4,-8 0 4,-4 0 8,4 0 8,8 0 4]
 laserPosition -42 30 -25
}
#######################################################
# Swirl
#######################################################
DEF spot_swirl_clock TimeSensor{cycleInterval 5 loop TRUE enabled FALSE}
DEF spot_swirl_script Script{
eventIn   SFFloat set_fraction
eventOut  SFVec3f value_a_changed
eventOut  SFVec3f value_b_changed
eventOut  SFVec3f value_c_changed
eventOut  SFVec3f value_d_changed
url"vrmlscript:
function set_fraction(v,t){
 rot = new SFRotation(0,1,0,(v * 6.284));
 
 value_a_changed = rot.multVec(new SFVec3f( 10,0, 10));
 value_b_changed = rot.multVec(new SFVec3f(-10,0, 10));
 value_c_changed = rot.multVec(new SFVec3f( 10,0,-10));
 value_d_changed = rot.multVec(new SFVec3f(-10,0,-10));
}
"}

#######################################################
# lead singer highlight
#######################################################
DEF lead_clock TimeSensor{cycleInterval 5 loop TRUE enabled FALSE}
DEF lead_interp_a PositionInterpolator{
key[0,.5,1]
keyValue[0 0 0,0 30 0,0 0 0]}
DEF lead_interp_b PositionInterpolator{
key[0,.5,1]
keyValue[0 30 0,0 0 0,0 30 0]}
DEF lead_interp_c PositionInterpolator{
key[0,.5,1]
keyValue[0 30 0,0 0 0,0 30 0]}
DEF lead_interp_d PositionInterpolator{
key[0,.5,1]
keyValue[0 0 0,0 30 0,0 0 0]}

#######################################################
# Band Highlight
#######################################################
DEF band_clock TimeSensor{cycleInterval 10 loop TRUE enabled FALSE}
DEF band_interp_a PositionInterpolator{
key[0,.25,.5,.75,1]
keyValue[13 0 10,-13 0 0,13 0 -10,-13 0 0,13 0 10]}
DEF band_interp_b PositionInterpolator{
key[0,.25,.5,.75,1]
keyValue[-13 0 10,13 0 0,-13 0 -10,13 0 0,-13 0 10]}
DEF band_interp_c PositionInterpolator{
key[0,.25,.5,.75,1]
keyValue[13 0 -10,-13 0 0,13 0 10,-13 0 0,13 0 -10]}
DEF band_interp_d PositionInterpolator{
key[0,.25,.5,.75,1]
keyValue[-13 0 -10,13 0 0,-13 0 10,13 0 0,-13 0 -10]}


#######################################################
# off
#######################################################
DEF off_clock TimeSensor{cycleInterval 5 loop TRUE enabled FALSE}
DEF off_interp PositionInterpolator{
key[0,1]
keyValue[0 50 0,0 50 0]}

]}

################################################################################
# Big Light
################################################################################
DEF l5_switch Switch{
whichChoice -1
choice[
DEF l5 LaserDrawPlane{
 color 1 .35 0
 drawCoord[ 20 0 -10,10 0 -20,-10 0 -20,-20 0 -10,-20 0 10,-10 0 20,10 0 20,20 0 10,]
 laserPosition 0 30 0
}
]}

################################################################################
# Light Unit Geometry
################################################################################

Transform{
children[
Transform {
scale 1.2 1 1
children [
Shape {
appearance Appearance {
#material Material {}
texture ImageTexture {
url "platformside.jpg"
}
}
geometry
IndexedFaceSet {
coord
Coordinate {
point [ 6.826 42.41 0 4.827 42.41 4.827 0 42.41 6.826 -4.827 42.41 4.827 -6.826 42.41 0 -4.827 42.41 -4.827 0 42.41 -6.826 4.827 42.41 -4.827 9.829 45.71 0 6.95 45.71 6.95 0 45.71 9.829 -6.95 45.71 6.95 -9.829 45.71 0 -6.95 45.71 -6.95 0 45.71 -9.829
6.95 45.71 -6.95 17.1 45.61 0 12.09 45.61 12.09 0 45.61 17.1 -12.09 45.61 12.09 -17.1 45.61 0 -12.09 45.61 -12.09 0 45.61 -17.1 12.09 45.61 -12.09 17.1 48.26 0 12.09 48.26 12.09 0 48.26 17.1 -12.09 48.26 12.09 -17.1 48.26 0 -12.09 48.26 -12.09 0 48.26
-17.1 12.09 48.26 -12.09 ] }
coordIndex [ 1 0 8 9 -1 2 1 9 10 -1 3 2 10 11 -1 4 3 11 12 -1 5 4 12 13 -1 6 5 13 14 -1 7 6 14 15 -1 0 7 15 8 -1 9 8 16 17 -1 10 9 17 18 -1 11 10 18 19 -1 12 11 19 20 -1 13 12 20 21 -1 14 13 21 22 -1 15 14 22 23 -1 8 15 23 16 -1 17 16 24 25 -1 18 17 25
26 -1 19 18 26 27 -1 20 19 27 28 -1 21 20 28 29 -1 22 21 29 30 -1 23 22 30 31 -1 16 23 31 24 -1 ] texCoordIndex
[ 4 5 7 6 -1 0 1 3 2 -1 28 29 31 30 -1 24 25 27 26 -1 20 21 23 22 -1 16 17 19 18 -1 12 13 15 14 -1 8 9 11 10 -1 40 41 43 42 -1 36 37 39 38 -1 32 33 35 34 -1 60 61 63 62 -1 56 57 59 58 -1 52 53 55 54 -1 48 49 51 50 -1 44 45 47 46 -1 64 65 67 66 -1 68 64
66 69 -1 70 68 69 71 -1 72 70 71 73 -1 74 72 73 75 -1 80 74 75 81 -1 78 76 77 79 -1 65 78 79 67 -1 ] texCoord
TextureCoordinate { point [ .1273 1.005 .8782 1.005 -.0379 .4513 1.043 .4513 -.2028 1 1.232 1 -.5185 .4514 1.548 .4514 -.2518 1.005 1.177 1.005 -.5662 .4583 1.492 .4583 .1218 1.005 .8727 1.005 -.04341 .4513 1.038 .4513 .1305 1.01 .8814 1.001 -.03819
.4578 1.043 .4447 -.2688 1.007 1.181 .9977 -.5946 .4545 1.494 .4413 -.2276 .992 1.181 .9831 -.544 .4555 1.484 .4428 .1113 .9869 .8622 .996 -.05038 .4308 1.031 .4439 .2728 .3931 .7264 .3978 .1085 -.09126 .8978 -.08306 .2179 .3939 .6732 .3891 .04594 -.08878
.8381 -.09702 .6892 .3882 1.331 .3882 .4515 -.09337 1.569 -.09338 .1213 .3934 .7743 .3934 -.1203 -.09628 1.016 -.09628 .1935 .3916 .6506 .3916 .0244 -.09477 .8197 -.09477 .3383 .3962 .7975 .3962 .1684 -.09234 .9673 -.09234 .04706 .3945 .6878 .3945 -.19
-.08596 .9248 -.08596 .2404 .383 .8703 .383 .007324 -.08939 1.103 -.08939 5 1.336 6 1.336 5 2.044 6 2.044 4 1.336 4 2.044 3 1.336 3 2.044 2 1.336 2 2.044 1 1.336 1 2.044 8 1.336 8 2.044 7 1.336 7 2.044 0 1.336 0 2.044 ] }
}
}
]
}
Transform {
children Shape {
appearance Appearance {
#material Material {}
texture ImageTexture {
url "platformside.jpg"
}
textureTransform TextureTransform {
center .5 .5
}
}
geometry
IndexedFaceSet {
coord Coordinate {
point [
14.23 47.67 0, 10.06 47.67 10.06, 0 47.67 14.23, -10.06 47.67 10.06, -14.23 47.67 0, 5.239 63.97 1.209e-005, 3.704 63.97 3.704, 0 63.97 5.239, -3.704 63.97 3.704, -5.239 63.97 1.163e-005,
]
}
coordIndex [
1 0 5 6 -1, 2 1 6 7 -1, 3 2 7 8 -1, 4 3 8 9 -1,
]
texCoord TextureCoordinate {
point [
.50131 .391173, .301929 .389863, 4.91478e-005 .392825, -.319167 .392136, -.49869 .391173, .268231 .995097, .100805 .995097, 4.35486e-006 .998059, -.118133 .99737, -.29145 .995097,
]
}
creaseAngle 3
texCoordIndex [
1 0 5 6 -1, 2 1 6 7 -1, 3 2 7 8 -1, 4 3 8 9 -1,
]
}
}
scale 1.2 1 1
}
Transform {
children Shape {
appearance Appearance {
#material Material {}
texture ImageTexture {
url "platformside.jpg"
}
textureTransform TextureTransform {
scale .05 1
}
}
geometry
IndexedFaceSet {
coord Coordinate {
point [
13.04 45.61 10, 12.09 45.61 12.09, -12.09 45.61 12.09, -12.09 45.61 -12.09, 12.09 45.61 -12.09, 13.04 48.23 10, 12.09 48.26 12.09, -12.09 48.26 12.09, -12.09 48.26 -12.09, 12.09 48.26 -12.09, 13.07 48.26 -10, 13.07 45.61 -10, -12.99 48.26 9.49,
-12.99 45.61 9.49, -13.11 48.26 -9.421, -13.11 45.61 -9.421, 58.65 46.6 39.3, 58.41 46.6 39.82, -54.21 46.42 39.88, -53.69 46.4 -39.75, 58.24 46.4 -40.19, 58.65 47.25 39.3, 58.41 47.26 39.82, -54.21 47.04 39.88, -53.69 47.07 -39.75, 58.49 47.07 -39.67,
58.49 46.4 -39.67, -54.54 47.04 39.37, -54.54 46.42 39.37, -54.05 47.07 -39.21, -54.05 46.4 -39.21,
]
}
coordIndex [
17 16 22 -1, 23 27 18 -1, 19 30 24 -1, 21 22 16 -1, 27 28 18 -1, 29 24 30 -1, 1 0 16 -1, 16 17 1 -1, 6 1 17 -1, 17 22 6 -1, 7 12 27 -1, 27 23 7 -1, 2 7 23 -1, 23 18 2 -1, 3 15 30 -1, 30 19 3 -1, 9 10 25 -1, 11 4 20 -1, 20 26 11 -1, 10 11 26 -1, 26 25
10 -1, 5 6 22 -1, 22 21 5 -1, 13 2 18 -1, 18 28 13 -1, 14 8 24 -1, 24 29 14 -1, 15 14 29 -1, 29 30 15 -1,
]
texCoord TextureCoordinate {
point [
0 0, 1 0, 0 1, 1 1,
]
}
creaseAngle 3
texCoordIndex [
2 0 3 -1, 1 3 0 -1, 1 3 0 -1, 3 0 1 -1, 3 0 1 -1, 2 0 3 -1, 0 1 3 -1, 3 2 0 -1, 0 1 3 -1, 3 2 0 -1, 0 1 3 -1, 3 2 0 -1, 0 1 3 -1, 3 2 0 -1, 0 1 3 -1, 3 2 0 -1, 0 1 3 -1, 0 1 3 -1, 3 2 0 -1, 0 1 3 -1, 3 2 0 -1, 0 1 3 -1, 3 2 0 -1, 0 1 3 -1, 3 2 0 -1,
0 1 3 -1, 3 2 0 -1, 0 1 3 -1, 3 2 0 -1,
]
}
}
scale 1.2 1 1
}
]
translation 0 0 0
scale .65 .65 .65
}

################################################################################
# Stage
################################################################################

DEF data_1_switch Switch{
whichChoice -1
choice[

Transform{
children[
DEF data_cylinder Transform {
children[ 
Shape {
appearance Appearance {
material Material {emissiveColor 0 1 0 diffuseColor 0 1 0 specularColor 1 .7 0}
texture ImageTexture {
url "text.png"
}
}
geometry DEF _0 IndexedFaceSet {
coord Coordinate { point [ 3.697 3.141 0 3.516 3.141 -1.145 2.99 3.141 -2.18 2.173 3.141 -2.999 1.141 3.141 -3.526 0 3.141 -3.708 -1.141 3.141 -3.526 -2.173 3.141 -2.999 -2.99 3.141 -2.18 -3.516 3.141
-1.145 -3.697 3.141 0 -3.516 3.141 1.145 -2.99 3.141 2.18 -2.173 3.141 2.999 -1.141 3.141 3.526 0 3.141 3.708 1.141 3.141 3.526 2.173 3.141 2.999 2.99 3.141 2.18 3.516 3.141 1.145 3.697 9.823 0 3.516
9.823 -1.145 2.99 9.823 -2.18 2.173 9.823 -2.999 1.141 9.823 -3.526 0 9.823 -3.708 -1.141 9.823 -3.526 -2.173 9.823 -2.999 -2.99 9.823 -2.18 -3.516 9.823 -1.145 -3.697 9.823 0 -3.516 9.823 1.145 -2.99
9.823 2.18 -2.173 9.823 2.999 -1.141 9.823 3.526 0 9.823 3.708 1.141 9.823 3.526 2.173 9.823 2.999 2.99 9.823 2.18 3.516 9.823 1.145 ] }
coordIndex [
0 21 20 -1, 0 1 21 -1, 1 22 21 -1, 1 2 22 -1, 2 23 22 -1, 2 3 23 -1, 3 24 23 -1, 3 4 24 -1, 4 25 24 -1, 4 5 25 -1, 5 26 25 -1, 5 6 26 -1, 6 27 26 -1, 6 7 27 -1, 7 28 27 -1, 7 8 28 -1, 8 29 28 -1,
8 9 29 -1, 9 30 29 -1, 9 10 30 -1, 10 31 30 -1, 10 11 31 -1, 11 32 31 -1, 11 12 32 -1, 12 33 32 -1, 12 13 33 -1, 13 34 33 -1, 13 14 34 -1, 14 35 34 -1, 14 15 35 -1, 15 36 35 -1, 15 16 36 -1, 16
37 36 -1, 16 17 37 -1, 17 38 37 -1, 17 18 38 -1, 18 39 38 -1, 18 19 39 -1, 19 20 39 -1, 19 0 20 -1,
]
texCoord TextureCoordinate { point [ .75 -1.328 .8 -1.328 .85 -1.328 .9 -1.328 .95 -1.328 1 -1.328 .05 -1.328 .1 -1.328 .15 -1.328 .2 -1.328 .25 -1.328 .3 -1.328 .35 -1.328 .4 -1.328 .45 -1.328 .5 -1.328
.55 -1.328 .6 -1.328 .65 -1.328 .7 -1.328 .75 2.328 .8 2.328 .85 2.328 .9 2.328 .95 2.328 1 2.328 .05 2.328 .1 2.328 .15 2.328 .2 2.328 .25 2.328 .3 2.328 .35 2.328 .4 2.328 .45 2.328 .5 2.328 .55 2.328
.6 2.328 .65 2.328 .7 2.328 0 -1.328 0 2.328 ] }
solid FALSE
texCoordIndex [
0 21 20 -1, 0 1 21 -1, 1 22 21 -1, 1 2 22 -1, 2 23 22 -1, 2 3 23 -1, 3 24 23 -1, 3 4 24 -1, 4 25 24 -1, 4 5 25 -1, 40 26 41 -1, 40 6 26 -1, 6 27 26 -1, 6 7 27 -1, 7 28 27 -1, 7 8 28 -1, 8 29 28
-1, 8 9 29 -1, 9 30 29 -1, 9 10 30 -1, 10 31 30 -1, 10 11 31 -1, 11 32 31 -1, 11 12 32 -1, 12 33 32 -1, 12 13 33 -1, 13 34 33 -1, 13 14 34 -1, 14 35 34 -1, 14 15 35 -1, 15 36 35 -1, 15 16 36 -1,
16 37 36 -1, 16 17 37 -1, 17 38 37 -1, 17 18 38 -1, 18 39 38 -1, 18 19 39 -1, 19 20 39 -1, 19 0 20 -1,
]
}
}
DEF dc_clock TimeSensor{cycleInterval 2 loop TRUE}
DEF dc_interp OrientationInterpolator{key[0,.5,1]keyValue[0 1 0 0,0 1 0 3.142,0 1 0 6.284]}
ROUTE dc_clock.fraction_changed TO dc_interp.set_fraction
ROUTE dc_interp.value_changed TO data_cylinder.set_rotation 

]}
]translation 3.00635 0 12.3723}
]}

DEF data_2_switch Switch{
whichChoice -1
choice[
Transform{children USE data_cylinder scale 5 5 5 translation 0 45 0 rotation 1 0 0 3.142}
]}


DEF singers_cylinder Transform {
children [
Transform {
children Shape {
appearance Appearance {
material Material {
ambientIntensity 0
diffuseColor 0 .007843 .02745
shininess .2875
transparency .5
}
texture ImageTexture {
url "support_arms2.jpg"
}
}
geometry DEF _1 IndexedFaceSet {
coord Coordinate { point [ -.025 0 .025 .025 0 .025 -.025 0 -.025 .025 0 -.025 -.025 2.719 .025 .025 2.719 .025 -.025 2.719 -.025 .025 2.719 -.025 ] }
coordIndex [
0 2 3 1 -1, 4 5 7 6 -1, 0 1 5 4 -1, 1 3 7 5 -1, 3 2 6 7 -1, 2 0 4 6 -1,
]
texCoord TextureCoordinate { point [ 0 0 1 0 0 1 1 1 ] }
texCoordIndex [
1 3 2 0 -1, 0 1 3 2 -1, 0 1 3 2 -1, 0 1 3 2 -1, 0 1 3 2 -1, 0 1 3 2 -1,
]
}
}
translation -1.391 -1.359 1.389
}
Transform {
children Shape {
appearance Appearance {
material Material {
ambientIntensity 0
diffuseColor 0 .007843 .02745
shininess .2875
transparency .5
}
texture ImageTexture {
url "support_arms2.jpg"
}
}
geometry DEF _2 IndexedFaceSet {
coord Coordinate { point [ -.025 0 .025 .025 0 .025 -.025 0 -.025 .025 0 -.025 -.025 2.719 .025 .025 2.719 .025 -.025 2.719 -.025 .025 2.719 -.025 ] }
coordIndex [
0 2 3 1 -1, 4 5 7 6 -1, 0 1 5 4 -1, 1 3 7 5 -1, 3 2 6 7 -1, 2 0 4 6 -1,
]
texCoord TextureCoordinate { point [ 0 0 1 0 0 1 1 1 ] }
texCoordIndex [
1 3 2 0 -1, 0 1 3 2 -1, 0 1 3 2 -1, 0 1 3 2 -1, 0 1 3 2 -1, 0 1 3 2 -1,
]
}
}
translation -1.391 -1.359 -1.387
}
Transform {
children Shape {
appearance Appearance {
material Material {
ambientIntensity 0
diffuseColor 0 .007843 .02745
shininess .2875
transparency .5
}
texture ImageTexture {
url "support_arms2.jpg"
}
}
geometry DEF _3 IndexedFaceSet {
coord Coordinate { point [ -.025 0 .025 .025 0 .025 -.025 0 -.025 .025 0 -.025 -.025 2.719 .025 .025 2.719 .025 -.025 2.719 -.025 .025 2.719 -.025 ] }
coordIndex [
0 2 3 1 -1, 4 5 7 6 -1, 0 1 5 4 -1, 1 3 7 5 -1, 3 2 6 7 -1, 2 0 4 6 -1,
]
texCoord TextureCoordinate { point [ 0 0 1 0 0 1 1 1 ] }
texCoordIndex [
1 3 2 0 -1, 0 1 3 2 -1, 0 1 3 2 -1, 0 1 3 2 -1, 0 1 3 2 -1, 0 1 3 2 -1,
]
}
}
translation 1.392 -1.359 -1.387
}
Transform {
children Shape {
appearance Appearance {
material Material {
ambientIntensity 0
diffuseColor 0 .007843 .02745
shininess .2875
transparency .5
}
texture ImageTexture {
url "support_arms2.jpg"
}
}
geometry DEF _4 IndexedFaceSet {
coord Coordinate { point [ -.025 0 .025 .025 0 .025 -.025 0 -.025 .025 0 -.025 -.025 2.719 .025 .025 2.719 .025 -.025 2.719 -.025 .025 2.719 -.025 ] }
coordIndex [
0 2 3 1 -1, 4 5 7 6 -1, 0 1 5 4 -1, 1 3 7 5 -1, 3 2 6 7 -1, 2 0 4 6 -1,
]
texCoord TextureCoordinate { point [ 0 0 1 0 0 1 1 1 ] }
texCoordIndex [
1 3 2 0 -1, 0 1 3 2 -1, 0 1 3 2 -1, 0 1 3 2 -1, 0 1 3 2 -1, 0 1 3 2 -1,
]
}
}
translation 1.392 -1.359 1.389
}
Transform {
children Shape {
appearance Appearance {
material Material {
ambientIntensity 0
diffuseColor 0 .007843 .01176
emissiveColor 0 .007843 .01176
shininess .2875
transparency .8
}
texture ImageTexture {
url "glass.gif"
}
}
geometry DEF _5 IndexedFaceSet {
coord Coordinate { point [ 34.01 .194 0 24.05 .194 -24.05 0 .194 -34.01 -24.05 .194 -24.05 -34.01 .194 0 -24.05 .194 24.05 0 .194 34.01 24.05 .194 24.05 -34.17 46 0 -24.2 46 -24.05 -24.2 46 24.05 33.86
46 0 23.9 46 -24.05 -.154 46 -34.01 -.154 46 34.01 23.9 46 24.05 ] }
coordIndex [
9 8 3 -1, 4 3 8 -1, 8 10 4 -1, 5 4 10 -1, 11 12 1 -1, 1 0 11 -1, 12 13 2 -1, 2 1 12 -1, 13 9 3 -1, 3 2 13 -1, 10 14 6 -1, 6 5 10 -1, 14 15 7 -1, 7 6 14 -1, 15 11 0 -1, 0 7 15 -1,
]
texCoord TextureCoordinate { point [ .75 -2.282 .972 -2.282 1 -2.282 .028 -2.282 .25 -2.282 .472 -2.282 .5 -2.282 .528 -2.282 .25 3.282 .028 3.282 .472 3.282 .75 3.282 .972 3.282 0 3.282 .5 3.282 .528
3.282 -.028 3.282 0 -2.282 ] }
solid FALSE
texCoordIndex [
9 8 3 -1, 4 3 8 -1, 8 10 4 -1, 5 4 10 -1, 11 12 1 -1, 1 0 11 -1, 16 13 17 -1, 2 1 12 -1, 13 9 3 -1, 3 17 13 -1, 10 14 6 -1, 6 5 10 -1, 14 15 7 -1, 7 6 14 -1, 15 11 0 -1, 0 7 15 -1,
]
}
}
translation .004465 -1.355 0
scale .05813 .05813 .05813
}
]
translation 3.00635 6.55535 12.3723
scale 1.42397 2 1.42397
}
DEF platforms Transform {
children [
DEF middle_platform Transform {
children DEF platform_6 Transform {
children Shape {
appearance Appearance {
material Material {}
texture ImageTexture {
url "top8.jpg"
}
}
geometry DEF _7 IndexedFaceSet {
coord Coordinate { point [ 2.358 3.729 -2.358 3.335 3.729 0 3.335 3.361 0 0 3.729 -3.335 -2.358 3.729 -2.358 -3.335 3.729 0 -3.335 3.361 0 -2.358 3.729 2.358 -2.358 3.361 2.358 0 3.729 3.335 0 3.361 3.335
2.358 3.729 2.358 2.358 3.361 2.358 2.83 2.943 -2.83 4.002 2.943 0 2.83 2.943 2.83 0 2.943 4.002 -2.83 2.943 2.83 -4.002 2.943 0 -2.83 2.943 -2.83 0 2.943 -4.002 2.83 3.384 -2.83 4.002 3.384 0 0 3.384
-4.002 -2.83 3.384 -2.83 -4.002 3.384 0 -2.83 3.384 2.83 0 3.384 4.002 2.83 3.384 2.83 -.304 .292 .002 -.304 2.672 .002 .303 .292 .002 .303 2.672 .002 .151 .292 .265 .151 2.672 .265 -.153 .292 .265 -.153
2.672 .265 -.392 .293 -.676 -.784 .293 .002 -.392 .293 .68 .391 .293 .68 .782 .293 .002 .391 .293 -.676 -.784 0 .002 .782 0 .002 .391 0 .68 -.392 0 .68 -.392 2.666 .68 -.784 2.666 .002 -.392 2.666 -.676
.391 2.666 -.676 .782 2.666 .002 .391 2.666 .68 -.392 2.959 .68 -.784 2.959 .002 .391 2.959 .68 .782 2.959 .002 ] }
coordIndex [
7 5 6 8 -1, 9 7 8 10 -1, 11 9 10 12 -1, 1 11 12 2 -1, 1 0 3 4 5 7 9 11 -1, 13 14 15 16 17 18 19 20 -1, 26 25 18 17 -1, 27 26 17 16 -1, 28 27 16 15 -1, 22 28 15 14 -1, 22 21 23 24 25 26 27 28 -1,
33 31 32 34 -1, 35 33 34 36 -1, 29 35 36 30 -1, 37 38 39 40 41 42 -1, 45 44 41 40 -1, 46 45 40 39 -1, 43 46 39 38 -1, 47 48 49 50 51 52 -1, 53 54 48 47 -1, 55 53 47 52 -1, 56 55 52 51 -1,
]
texCoord TextureCoordinate { point [ .502 .086 .502 .001 .003 .086 .003 .001 .5 .088 .5 .001 0 .088 0 .001 .625 .086 .625 .001 .003 .088 .821 .551 .712 .822 .449 .934 .186 .822 .077 .551 .186 .28 .449
.168 .712 .28 .758 .859 .886 .55 .758 .242 .45 .114 .141 .242 .013 .55 .141 .859 .45 .987 .5 .086 .5 .004 .782 .086 .282 .086 .282 .001 .782 .001 .505 .079 1.561 .079 1.561 .001 .505 .001 -.551 .079 -.551
.001 0 .086 0 .004 .879 .556 .754 .865 .451 .993 .148 .865 .022 .556 .148 .246 .451 .118 .754 .246 1 .056 0 .056 .25 .024 .75 .024 .501 .652 .549 .556 .501 .459 .404 .459 .356 .556 .404 .652 .75 .001
.5 .083 .75 .083 .745 .001 .255 .001 .255 .083 .745 .083 .25 .001 .25 .083 ] }
texCoordIndex [
6 4 5 7 -1, 0 8 9 1 -1, 2 0 1 3 -1, 0 10 3 1 -1, 11 12 13 14 15 16 17 18 -1, 19 20 21 22 23 24 25 26 -1, 29 30 31 32 -1, 33 34 35 36 -1, 37 33 36 38 -1, 27 39 40 28 -1, 41 42 43 44 45 46 47 48 -1,
51 50 50 51 -1, 52 51 51 52 -1, 49 52 52 49 -1, 53 54 55 56 57 58 -1, 66 5 60 67 -1, 63 62 65 64 -1, 5 66 67 60 -1, 53 54 55 56 57 58 -1, 59 5 60 61 -1, 62 63 64 65 -1, 5 59 61 60 -1,
]
}
}
}
translation .421114 -.166868 -1.21746
scale 1 1.40079 1
}
DEF left_back_platform Transform {
children USE platform_6
translation -9.02351 -.074791 -6.94667
scale 1 1.57791 1
}
DEF left_front_platform Transform {
children USE platform_6
translation -12.6759 2.38419e-007 5.72922
}
DEF singers_platform Transform {
children USE platform_6
translation 2.94313 -.197151 12.2179
}
DEF drummers_platform Transform {
children USE platform_6
translation 13.034 -1.52848e-008 -3.00784
scale 1 1.45755 1
}
]
}
DEF stage_lights Transform {
children [
DEF drummers_lights Transform {
children DEF light_bank_8 Transform {
children [
Transform {
children DEF _9 Transform {
children [
Transform {
children Shape {
appearance Appearance {
material Material {transparency .5 emissiveColor 1 1 1}
texture ImageTexture {
url "graylight.png"
}
}
geometry DEF _10 IndexedFaceSet {
coord Coordinate { point [ .596 1.19 .054 .581 1.19 -.391 .598 6.149 .101 .577 6.149 -.491 ] }
coordIndex [
0 1 3 -1, 3 2 0 -1,
]
texCoord TextureCoordinate { point [ 0 .083 .001 .834 1 1 1 0 ] }
ccw FALSE
texCoordIndex [
0 1 2 -1, 2 3 0 -1,
]
}
}
translation .138511 0 .594299
rotation 0 1 0 1.53402
}
Transform {
children Shape {
appearance Appearance {
material Material{}
texture ImageTexture {
url "light_texture.jpg"
}
}
geometry DEF _11 IndexedFaceSet {
coord Coordinate { point [ .577 1.19 -.499 .285 1.19 -.149 .6 1.19 .166 .577 .589 -.499 .285 .589 -.149 .6 .589 .166 ] }
coordIndex [
0 1 4 -1, 4 3 0 -1, 1 2 5 -1, 5 4 1 -1,
]
texCoord TextureCoordinate { point [ -.004 .002 .458 .002 .999 .002 -.004 1 .458 1 .999 1 ] }
ccw FALSE
creaseAngle 3.14159
texCoordIndex [
0 1 4 -1, 4 3 0 -1, 1 2 5 -1, 5 4 1 -1,
]
}
}
translation .138511 0 .594299
rotation 0 1 0 1.53402
}
]
}
translation 1.00647 0 1.69577
}
Transform {
children USE _9
translation -.832762 0 1.69577
}
Transform {
children USE _9
translation 2.00647 0 .69577
}
Transform {
children USE _9
translation -1.82995 0 .69577
}
Transform {
children USE _9
translation -1.81423 0 -1.30423
}
Transform {
children USE _9
translation 2.00647 0 -1.30423
}
]
}
translation 12.9504 -.333582 -3.41105
scale 1 1.51799 1
}
DEF left_back_lights Transform {
children USE light_bank_8
translation -9.32216 -.244121 -7.05336
scale 1 1.5579 1
}
DEF left_front_lights Transform {
children USE light_bank_8
translation -12.7192 0 5.43456
}
DEF singers_lights Transform {
children USE light_bank_8
translation 2.83291 0 12.141
}
DEF middle_plat_lights Transform {
children USE light_bank_8
translation .231255 -.414277 -1.38754
scale 1 1.60841 1
}
]
}




####################################################################################
#Top Level Nodes
####################################################################################

DEF nav NavigationInfo{headlight FALSE avatarSize [0.25, 3.5, 0.75]
}

Viewpoint {
position 0 3.5 4
orientation 0 1 0 3.142
description "Enter View"
}

Viewpoint{position 2.95277 7 11.6153   orientation 0 1 0 3.10345   description"singer"}
Viewpoint{position 13.1127 8.25 -4.36783  orientation 0 1 0 3.08288   description"drummer"}
Viewpoint{position 0.519835 8.25 -1.88175 orientation 0 1 0 3.08888   description"middle"}
Viewpoint{position -8.58449 8.75 -6.79391 orientation 0 -1 0 3.12634  description"back"}
Viewpoint{position -13.0025 7.25 5.0709    orientation 0 1 0 3.02057   description"left"}


Background {
groundColor .7 .4 .3
skyColor 0 0 0
backUrl "city_image2.jpg"
frontUrl "city_image2.jpg"
leftUrl "city_image2.jpg"
rightUrl "city_image2.jpg"
}


AudioPlayer{}

DEF light_1 DirectionalLight{color 1 .5 .75}
DEF light_2 DirectionalLight{color .5 .75 1}

DEF stage_light_1  DirectionalLight{color 1 .5 .5 intensity .75 direction 0 -1 1}
DEF stage_light_1a DirectionalLight{color 1 .5 .5 intensity .75 direction 0 1 .5}
DEF stage_light_2 SpotLight{
 location 0 39.2753 28.9929 
 direction 0 -1 -1 
 color 1 0 0 
 radius 200
 beamWidth .9855
 cutOffAngle .9855
 intensity 1
}

####################################################################################
#Control panel
####################################################################################

HUD{
children[

Transform{ translation .4   -.15  -1  children[ DEF bt1  TouchSensor{} Shape{appearance Appearance{material Material{diffuseColor 0 0 1}}geometry Sphere{radius .02}}]}
Transform{ translation .35  -.15  -1  children[ DEF bt2  TouchSensor{} Shape{appearance Appearance{material Material{diffuseColor 0 0 1}}geometry Sphere{radius .02}}]}
Transform{ translation .3   -.15  -1  children[ DEF bt3  TouchSensor{} Shape{appearance Appearance{material Material{diffuseColor 0 0 1}}geometry Sphere{radius .02}}]}

Transform{ translation .2   -.15  -1  children[ DEF bt4  TouchSensor{} Shape{appearance Appearance{material Material{diffuseColor 0 0 1}}geometry Sphere{radius .02}}]}
Transform{ translation .15  -.15  -1  children[ DEF bt5  TouchSensor{} Shape{appearance Appearance{material Material{diffuseColor 0 0 1}}geometry Sphere{radius .02}}]}
Transform{ translation .1   -.15  -1  children[ DEF bt6  TouchSensor{} Shape{appearance Appearance{material Material{diffuseColor 0 0 1}}geometry Sphere{radius .02}}]}

Transform{ translation   0  -.15  -1  children[ DEF bt7  TouchSensor{} Shape{appearance Appearance{material Material{diffuseColor 0 0 1}}geometry Sphere{radius .02}}]}
Transform{ translation -.05 -.15  -1  children[ DEF bt8  TouchSensor{} Shape{appearance Appearance{material Material{diffuseColor 0 0 1}}geometry Sphere{radius .02}}]}
Transform{ translation -.1  -.15  -1  children[ DEF bt9  TouchSensor{} Shape{appearance Appearance{material Material{diffuseColor 0 0 1}}geometry Sphere{radius .02}}]}
Transform{ translation -.15 -.15  -1  children[ DEF bt10 TouchSensor{} Shape{appearance Appearance{material Material{diffuseColor 0 0 1}}geometry Sphere{radius .02}}]}

Transform{ translation -.25 -.15  -1  children[ DEF bt11 TouchSensor{} Shape{appearance Appearance{material Material{diffuseColor 0 0 1}}geometry Sphere{radius .02}}]}
Transform{ translation -.3  -.15  -1  children[ DEF bt12 TouchSensor{} Shape{appearance Appearance{material Material{diffuseColor 0 0 1}}geometry Sphere{radius .02}}]}
Transform{ translation -.35  -.15 -1  children[ DEF bt13 TouchSensor{} Shape{appearance Appearance{material Material{diffuseColor 0 0 1}}geometry Sphere{radius .02}}]}
Transform{ translation -.4  -.15  -1  children[ DEF bt14 TouchSensor{} Shape{appearance Appearance{material Material{diffuseColor 0 0 1}}geometry Sphere{radius .02}}]}
                                                      
Transform{ translation .4   -.2   -1  children[ DEF bt15 TouchSensor{} Shape{appearance Appearance{material Material{diffuseColor 0 0 1}}geometry Sphere{radius .02}}]}
Transform{ translation .35  -.2   -1  children[ DEF bt16 TouchSensor{} Shape{appearance Appearance{material Material{diffuseColor 0 0 1}}geometry Sphere{radius .02}}]}
Transform{ translation .3   -.2   -1  children[ DEF bt17 TouchSensor{} Shape{appearance Appearance{material Material{diffuseColor 0 0 1}}geometry Sphere{radius .02}}]}

Transform{ translation .2   -.2   -1  children[ DEF bt18 TouchSensor{} Shape{appearance Appearance{material Material{diffuseColor 0 0 1}}geometry Sphere{radius .02}}]}
Transform{ translation .15  -.2   -1  children[ DEF bt19 TouchSensor{} Shape{appearance Appearance{material Material{diffuseColor 0 0 1}}geometry Sphere{radius .02}}]}
Transform{ translation .1   -.2   -1  children[ DEF bt20 TouchSensor{} Shape{appearance Appearance{material Material{diffuseColor 0 0 1}}geometry Sphere{radius .02}}]}

Transform{ translation .2    .3   -1  children[ DEF bt21 TouchSensor{} Shape{appearance Appearance{material Material{diffuseColor 1 0 1}}geometry Sphere{radius .04}}]}
Transform{ translation .1    .3   -1  children[ DEF bt22 TouchSensor{} Shape{appearance Appearance{material Material{diffuseColor 1 0 1}}geometry Sphere{radius .04}}]}
Transform{ translation  0    .3   -1  children[ DEF bt23 TouchSensor{} Shape{appearance Appearance{material Material{diffuseColor 1 0 1}}geometry Sphere{radius .04}}]}
Transform{ translation -.1   .3   -1  children[ DEF bt24 TouchSensor{} Shape{appearance Appearance{material Material{diffuseColor 1 0 1}}geometry Sphere{radius .04}}]}
Transform{ translation -.2   .3   -1  children[ DEF bt25 TouchSensor{} Shape{appearance Appearance{material Material{diffuseColor 1 0 1}}geometry Sphere{radius .04}}]}
Transform{ translation -.3   .3   -1  children[ DEF bt26 TouchSensor{} Shape{appearance Appearance{material Material{diffuseColor 1 0 1}}geometry Sphere{radius .04}}]}
Transform{ translation -.4   .3   -1  children[ DEF bt27 TouchSensor{} Shape{appearance Appearance{material Material{diffuseColor 1 0 1}}geometry Sphere{radius .04}}]}

]}
####################################################################################
#Lighting
####################################################################################

DEF light_script Script{

eventIn SFBool set_stage_color_1
eventIn SFBool set_stage_color_2
eventIn SFBool set_stage_color_3
eventIn SFBool set_laser_color_1
eventIn SFBool set_laser_color_2
eventIn SFBool set_laser_color_3
eventIn SFBool set_spot_color_1
eventIn SFBool set_spot_color_2
eventIn SFBool set_spot_color_3
eventIn SFBool set_spot_1 #off
eventIn SFBool set_spot_2 #swirl
eventIn SFBool set_spot_3 #lead
eventIn SFBool set_spot_4 #band
eventIn SFBool set_laser_1 #off
eventIn SFBool set_laser_2 #spinswoop
eventIn SFBool set_laser_3 #spin
eventIn SFBool set_laser_4 #backdrop
eventIn SFBool set_data_1
eventIn SFBool set_data_2
eventIn SFBool set_mainstage

field SFNode light1           USE light_1
field SFNode light2           USE light_2
field SFNode stage_light_1    USE stage_light_1 
field SFNode stage_light_1a   USE stage_light_1a 
field SFNode stage_light_2    USE stage_light_2
field SFNode laser_a          USE laser_a
field SFNode laser_b          USE laser_b
field SFNode laser_c          USE laser_c
field SFNode laser_d          USE laser_d
field SFNode spot_a           USE spot_a
field SFNode spot_b           USE spot_b
field SFNode spot_c           USE spot_c
field SFNode spot_d           USE spot_d
field SFNode spot_swirl       USE spot_swirl_clock
field SFNode spot_lead        USE lead_clock 
field SFNode spot_band        USE band_clock 
field SFNode spot_off         USE off_clock 
field SFNode spinswoop        USE spinswoop_clock
field SFNode spin             USE spin_clock
field SFNode laseroff         USE laseroff_clock
field SFNode backdrop         USE backdrop_clock
field SFNode mainstage_switch USE l5_switch
field SFNode mainstage        USE l5
field SFNode data_1_switch    USE data_1_switch
field SFNode data_2_switch    USE data_2_switch
field SFBool data_1_on    FALSE
field SFBool data_2_on    FALSE
field SFBool mainstage_on FALSE

field SFBool isHardware TRUE

eventIn   SFVec3f   set_light_1
eventIn   SFVec3f   set_light_2
eventOut  SFVec3f   light_1_changed
eventOut  SFVec3f   light_2_changed

eventIn SFTime set_dswitch_1
eventIn SFTime set_dswitch_2
eventIn SFTime set_dswitch_3
eventOut SFBool data_1_changed
eventOut SFBool data_2_changed
eventOut SFBool data_3_changed

directOutput TRUE

url"vrmlscript:

function set_light_1(v,t){if(!isHardware){return;}r = new SFRotation(new SFVec3f(0,0,1),v.normalize()).inverse(); light_1_changed = r.multVec(new SFVec3f(0,0,1));}
function set_light_2(v,t){if(!isHardware){return;}r = new SFRotation(new SFVec3f(0,0,1),v.normalize()).inverse(); light_2_changed = r.multVec(new SFVec3f(0,0,1));}
function set_stage_color_1(v){if(v){
 stage_light_1a.color = stage_light_1.color = new SFColor(1,.8,.4); 
 stage_light_2.color = new SFColor(1,.7,.2);
 mainstage.set_color = new SFColor(1,.7,.2);
}}
function set_stage_color_2(v){if(v){ 
 stage_light_1a.color = stage_light_1.color = new SFColor(.6,.8,1);
 stage_light_2.color = new SFColor(.1,.4,1); 
 mainstage.set_color = new SFColor(.1,.4,1); 
}}
function set_stage_color_3(v){if(v){ 
 stage_light_1a.color = stage_light_1.color = new SFColor(1,.7,1);
 stage_light_2.color = new SFColor(1,.3,1);
 mainstage.set_color = new SFColor(1,.3,1);
}}

function set_laser_color_1(v){if(v){
 laser_a.set_color = new SFColor(.5,.25,1);
 laser_b.set_color = new SFColor(.5,.25,1);
 laser_c.set_color = new SFColor(.5,.25,1);
 laser_d.set_color = new SFColor(.5,.25,1);
}}
function set_laser_color_2(v){if(v){
 laser_a.set_color = new SFColor(.2,1,0);
 laser_b.set_color = new SFColor(.2,1,0);
 laser_c.set_color = new SFColor(.2,1,0);
 laser_d.set_color = new SFColor(.2,1,0);
}}
function set_laser_color_3(v){if(v){
 laser_a.set_color = new SFColor(0,1,1);
 laser_b.set_color = new SFColor(.5,1,1);
 laser_c.set_color = new SFColor(0,1,1);
 laser_d.set_color = new SFColor(.5,1,1);
}}

function set_spot_color_1(v){if(v){
 spot_a.set_color = new SFColor(1,.5,0);
 spot_b.set_color = new SFColor(1,.5,0);
 spot_c.set_color = new SFColor(1,.5,0);
 spot_d.set_color = new SFColor(1,.5,0);
}}
function set_spot_color_2(v){if(v){
 spot_a.set_color = new SFColor(.5,0,1);
 spot_b.set_color = new SFColor(.5,0,1);
 spot_c.set_color = new SFColor(.5,0,1);
 spot_d.set_color = new SFColor(.5,0,1);
}}
function set_spot_color_3(v){if(v){
 spot_a.set_color = new SFColor(0,1,1);
 spot_b.set_color = new SFColor(0,1,1);
 spot_c.set_color = new SFColor(0,1,1);
 spot_d.set_color = new SFColor(0,1,1);
}}

function reset_spot(){
 spot_off.enabled = false;
 spot_lead.enabled = false;
 spot_band.enabled = false;
 spot_swirl.enabled = false;
}
function set_spot_1(v){if(v){
if(!spot_off.enabled){ reset_spot(); spot_off.enabled = true;}
}}
function set_spot_2(v){if(v){
if(!spot_swirl.enabled){ reset_spot(); spot_swirl.enabled = true;}
}}
function set_spot_3(v){if(v){
if(!spot_lead.enabled){ reset_spot(); spot_lead.enabled = true;}
}}
function set_spot_4(v){if(v){
if(!spot_band.enabled){ reset_spot(); spot_band.enabled = true;}
}}

function reset_laser(){laseroff.enabled = false; spinswoop.enabled = false; spin.enabled = false; backdrop.enabled = false;}
function set_laser_1(v){if(v){
if(!laseroff.enabled){ reset_laser(); laseroff.enabled = true;}
}}
function set_laser_2(v){if(v){
if(!spinswoop.enabled){ reset_laser(); spinswoop.enabled = true;}
}}
function set_laser_3(v){if(v){
if(!spin.enabled){ reset_laser(); spin.enabled = true;}
}}
function set_laser_4(v){if(v){
if(!backdrop.enabled){ reset_laser(); backdrop.enabled = true;}
}}

function set_data_1(v){
 if(!v){data_1_switch.whichChoice = -1;}
 else{data_1_switch.whichChoice = 0;}
}
function set_data_2(v){
 if(!v){data_2_switch.whichChoice = -1;}
 else{data_2_switch.whichChoice = 0;}
}
function set_mainstage(v){
 if(!v){mainstage_switch.whichChoice = -1;}
 else{mainstage_switch.whichChoice = 0;}
}

function set_dswitch_1(v){
 if(data_1_on){data_1_on = false;  data_1_changed = false;}
 else{data_1_on = true;  data_1_changed = true;}
}
function set_dswitch_2(v){
 if(data_2_on){data_2_on = false;  data_2_changed = false;}
 else{data_2_on = true;  data_2_changed = true;}
}
function set_dswitch_3(v){
 if(mainstage_on){mainstage_on = false;  data_3_changed = false;}
 else{mainstage_on = true;  data_3_changed = true;}
}

function initialize(){
set_stage_color_1(true);
set_laser_1(true);
set_spot_1(true);
Browser.setGravity(false);
}
"}

####################################################################################
#Shared
####################################################################################

DEF SharedZone BlaxxunZone{
events[
DEF event_1    SharedEvent{name "P_event1"}
DEF event_2    SharedEvent{name "P_event2"}
DEF event_3    SharedEvent{name "P_event3"}
DEF event_4    SharedEvent{name "P_event4"}
DEF event_5    SharedEvent{name "P_event5"}
DEF event_6    SharedEvent{name "P_event6"}
DEF event_7    SharedEvent{name "P_event7"}
DEF event_8    SharedEvent{name "P_event8"}
DEF event_9    SharedEvent{name "P_event9"}
DEF event_10   SharedEvent{name "P_event10"}
DEF event_11   SharedEvent{name "P_event11"}
DEF event_12   SharedEvent{name "P_event12"}
DEF event_13   SharedEvent{name "P_event13"}
DEF event_14   SharedEvent{name "P_event14"}
DEF event_15   SharedEvent{name "P_event15"}
DEF event_16   SharedEvent{name "P_event16"}
DEF event_17   SharedEvent{name "P_event17"}
DEF event_18   SharedEvent{name "P_event18"}
DEF event_19   SharedEvent{name "P_event19"}
DEF event_20   SharedEvent{name "P_event20"}
]}
ROUTE bt1.isActive                 TO event_1.set_bool
ROUTE bt2.isActive                 TO event_2.set_bool
ROUTE bt3.isActive                 TO event_3.set_bool
ROUTE bt4.isActive                 TO event_4.set_bool
ROUTE bt5.isActive                 TO event_5.set_bool
ROUTE bt6.isActive                 TO event_6.set_bool
ROUTE bt7.isActive                 TO event_7.set_bool
ROUTE bt8.isActive                 TO event_8.set_bool
ROUTE bt9.isActive                 TO event_9.set_bool
ROUTE bt10.isActive                TO event_10.set_bool
ROUTE bt11.isActive                TO event_11.set_bool
ROUTE bt12.isActive                TO event_12.set_bool
ROUTE bt13.isActive                TO event_13.set_bool
ROUTE bt14.isActive                TO event_14.set_bool
ROUTE bt15.isActive                TO event_15.set_bool
ROUTE bt16.isActive                TO event_16.set_bool
ROUTE bt17.isActive                TO event_17.set_bool
ROUTE bt18.touchTime TO light_script.set_dswitch_1  ROUTE light_script.data_1_changed TO event_18.set_bool
ROUTE bt19.touchTime TO light_script.set_dswitch_2  ROUTE light_script.data_2_changed TO event_19.set_bool
ROUTE bt20.touchTime TO light_script.set_dswitch_3  ROUTE light_script.data_3_changed TO event_20.set_bool
ROUTE event_1.bool_changed     TO light_script.set_laser_color_1
ROUTE event_2.bool_changed     TO light_script.set_laser_color_2
ROUTE event_3.bool_changed     TO light_script.set_laser_color_3
ROUTE event_4.bool_changed     TO light_script.set_spot_color_1
ROUTE event_5.bool_changed     TO light_script.set_spot_color_2
ROUTE event_6.bool_changed     TO light_script.set_spot_color_3
ROUTE event_7.bool_changed     TO light_script.set_spot_1 #off
ROUTE event_8.bool_changed     TO light_script.set_spot_2 #swirl
ROUTE event_9.bool_changed     TO light_script.set_spot_3 #lead
ROUTE event_10.bool_changed    TO light_script.set_spot_4 #band
ROUTE event_11.bool_changed    TO light_script.set_laser_1 #off
ROUTE event_12.bool_changed    TO light_script.set_laser_2 #spinswoop
ROUTE event_13.bool_changed    TO light_script.set_laser_3 #spin
ROUTE event_14.bool_changed    TO light_script.set_laser_4 #backdrop
ROUTE event_15.bool_changed    TO light_script.set_stage_color_1
ROUTE event_16.bool_changed    TO light_script.set_stage_color_2
ROUTE event_17.bool_changed    TO light_script.set_stage_color_3
ROUTE event_18.bool_changed    TO light_script.set_data_1
ROUTE event_19.bool_changed    TO light_script.set_data_2
ROUTE event_20.bool_changed    TO light_script.set_mainstage

DEF gesture_script Script{
eventIn SFTime set_1
eventIn SFTime set_2
eventIn SFTime set_3
eventIn SFTime set_4
eventIn SFTime set_5
eventIn SFTime set_6
eventIn SFTime set_7
eventOut SFInt32 gesture_changed
url"vrmlscript:
function set_1(v,t){gesture_changed = 1;}
function set_2(v,t){gesture_changed = 2;}
function set_3(v,t){gesture_changed = 3;}
function set_4(v,t){gesture_changed = 4;}
function set_5(v,t){gesture_changed = 5;}
function set_6(v,t){gesture_changed = 6;}
function set_7(v,t){gesture_changed = 7;}
"}
ROUTE bt21.touchTime                 TO gesture_script.set_1
ROUTE bt22.touchTime                 TO gesture_script.set_2
ROUTE bt23.touchTime                 TO gesture_script.set_3
ROUTE bt24.touchTime                 TO gesture_script.set_4
ROUTE bt25.touchTime                 TO gesture_script.set_5
ROUTE bt26.touchTime                 TO gesture_script.set_6
ROUTE bt27.touchTime                 TO gesture_script.set_7
ROUTE gesture_script.gesture_changed TO SharedZone.set_myAvatarGesture

####################################################################################
#Lighting Routes
####################################################################################
ROUTE spinswoop_script.value_a_changed      TO light_script.set_light_1 
ROUTE spinswoop_script.value_b_changed      TO light_script.set_light_2 
ROUTE light_script.light_1_changed          TO light_1.set_direction 
ROUTE light_script.light_2_changed          TO light_2.set_direction 

#spot animation routes
ROUTE spot_swirl_clock.fraction_changed        TO spot_swirl_script.set_fraction
ROUTE spot_swirl_script.value_a_changed        TO spot_a.set_position
ROUTE spot_swirl_script.value_b_changed        TO spot_b.set_position
ROUTE spot_swirl_script.value_c_changed        TO spot_c.set_position
ROUTE spot_swirl_script.value_d_changed        TO spot_d.set_position
ROUTE lead_clock.fraction_changed              TO lead_interp_a.set_fraction
ROUTE lead_clock.fraction_changed              TO lead_interp_b.set_fraction
ROUTE lead_clock.fraction_changed              TO lead_interp_c.set_fraction
ROUTE lead_clock.fraction_changed              TO lead_interp_d.set_fraction
ROUTE lead_interp_a.value_changed              TO spot_a.set_position
ROUTE lead_interp_b.value_changed              TO spot_b.set_position
ROUTE lead_interp_c.value_changed              TO spot_c.set_position
ROUTE lead_interp_d.value_changed              TO spot_d.set_position
ROUTE band_clock.fraction_changed              TO band_interp_a.set_fraction
ROUTE band_clock.fraction_changed              TO band_interp_b.set_fraction
ROUTE band_clock.fraction_changed              TO band_interp_c.set_fraction
ROUTE band_clock.fraction_changed              TO band_interp_d.set_fraction
ROUTE band_interp_a.value_changed              TO spot_a.set_position
ROUTE band_interp_b.value_changed              TO spot_b.set_position
ROUTE band_interp_c.value_changed              TO spot_c.set_position
ROUTE band_interp_d.value_changed              TO spot_d.set_position
ROUTE off_clock.fraction_changed               TO off_interp.set_fraction
ROUTE off_interp.value_changed                 TO spot_a.set_position
ROUTE off_interp.value_changed                 TO spot_b.set_position
ROUTE off_interp.value_changed                 TO spot_c.set_position
ROUTE off_interp.value_changed                 TO spot_d.set_position
#laser animation routes
ROUTE spinswoop_clock.fraction_changed      TO spinswoop_script.set_fraction
ROUTE spinswoop_script.value_a_changed      TO laser_a.set_position
ROUTE spinswoop_script.value_b_changed      TO laser_b.set_position
ROUTE spinswoop_script.value_c_changed      TO laser_c.set_position
ROUTE spinswoop_script.value_d_changed      TO laser_d.set_position
ROUTE spin_clock.fraction_changed           TO spin_script.set_fraction
ROUTE spin_script.value_a_changed           TO laser_a.set_position
ROUTE spin_script.value_b_changed           TO laser_b.set_position
ROUTE spin_script.value_c_changed           TO laser_c.set_position
ROUTE spin_script.value_d_changed           TO laser_d.set_position
ROUTE backdrop_clock.fraction_changed       TO laser_backdrop_interp_a.set_fraction
ROUTE backdrop_clock.fraction_changed       TO laser_backdrop_interp_b.set_fraction
ROUTE backdrop_clock.fraction_changed       TO laser_backdrop_interp_c.set_fraction
ROUTE backdrop_clock.fraction_changed       TO laser_backdrop_interp_d.set_fraction
ROUTE laser_backdrop_interp_a.value_changed TO laser_a.set_position
ROUTE laser_backdrop_interp_b.value_changed TO laser_b.set_position
ROUTE laser_backdrop_interp_c.value_changed TO laser_c.set_position
ROUTE laser_backdrop_interp_d.value_changed TO laser_d.set_position
ROUTE laseroff_clock.fraction_changed       TO laseroff.set_fraction
ROUTE laseroff.value_changed                TO laser_a.set_position
ROUTE laseroff.value_changed                TO laser_b.set_position
ROUTE laseroff.value_changed                TO laser_c.set_position
ROUTE laseroff.value_changed                TO laser_d.set_position

####################################################################################
#MISC Scripts
####################################################################################

DEF change Script{eventIn SFString set_scene url "vrmlscript:function set_scene(v,t){ Browser.loadURL(new MFString(v),new MFString());}"}


####################################################################################
#Inlines
####################################################################################
Inline {url "flatcars.wrl"}
#Inline {url "chopper.wrl"}
#Inline {url "top.wrl"}
#Inline {url "orgysets.wrl"}
DEF drums Transform {
children Inline {url "drums.wrl"}
translation 13.1335 6.91638 -2.3838 scale 2 2 2
}
